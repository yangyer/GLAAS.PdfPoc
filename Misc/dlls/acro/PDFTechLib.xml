<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PDFTechLib</name>
    </assembly>
    <members>
        <member name="T:PDFTech.PDFRemoteGoToAction">
            <summary>
            This class represents a PDF Remote Go-To action. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFAction">
            <summary>
            PDFAction is the base class for all actions. 
            </summary>
            <remarks>
            All interactive operations in PDF documents (jump to page, go to URL, change state of PDF controls etc.) are made possible with the help of actions.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.Zoom">
            <summary>
            Gets or sets the zoom factor to be used when the page is displayed. 
            </summary>
            <remarks>
             This value is used by the following magnification modes: <see cref="F:PDFTech.MagnificationMode.XYZ">MagnificationMode.XYZ</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.MagnificationMode">
            <summary>
            Gets or sets the magnification mode for destination page.
            </summary>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.PageIndex">
            <summary>
            Gets or sets the destination page index (in the remote document) for this action. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.TopOffset">
            <summary>
            Gets or sets the top coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes: 
            <see cref="F:PDFTech.MagnificationMode.XYZ">MagnificationMode.XYZ</see>, 
             <see cref="F:PDFTech.MagnificationMode.FitH"> MagnificationMode.FitH</see>,
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>,
            <see cref="F:PDFTech.MagnificationMode.FitBH"> MagnificationMode.FitBH</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.BottomOffset">
            <summary>
            Gets or sets the bottom coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes: 
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.LeftOffset">
            <summary>
            Gets or sets the left coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes:
            <see cref="F:PDFTech.MagnificationMode.XYZ">MagnificationMode.XYZ</see>, 
             <see cref="F:PDFTech.MagnificationMode.FitV"> MagnificationMode.FitV</see>,
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>,
            <see cref="F:PDFTech.MagnificationMode.FitBV"> MagnificationMode.FitBV</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.RightOffset">
            <summary>
            Gets or sets the right coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes: 
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.File">
            <summary>
            Gets or sets the remote file for this action. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFRemoteGoToAction.NewWindow">
            <summary>
            Gets or sets whether the remote document opens in current window or in a new window. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.BasePDFBarcode1D">
            <summary>
            
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.PDFBarcode1D">
            <summary>
            
            </summary>
        </member>
        <member name="M:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.IsCodeValid">
            <summary>
            Gets a value indicating whether the value to encode specified in the Code property is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.Height">
            <summary>
            Gets the height of the barcode. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.Width">
            <summary>
            Gets the width of the barcode. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.UnitOfMeasure">
            <summary>
            Gets or sets the UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.ForeColor">
            <summary>
            Gets or sets the foreground color of the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.BackColor">
            <summary>
            Gets or sets the background color for the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.Font">
            <summary>
            Gets or sets the font of the text displayed by the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.BarColor">
            <summary>
            Gets or sets the bars' color of the barcode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.BorderColor">
            <summary>
            Gets or sets the barcode border's color. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.BorderWidth">
            <summary>
            Gets or sets the barcode border's width. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.Code">
            <summary>
            Gets or sets the value to encode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.CodeAlignment">
            <summary>
            Gets or sets the text alignment for Code property. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.DisplayCode">
            <summary>
            Gets or sets whether the value to encode must be displayed in the barcode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.Text">
            <summary>
            Gets or sets the additional text to show in the barcode image. This is not the value to encode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.PDFBarcode1D.TextAlignment">
            <summary>
            Gets or sets the text alignment for Text property. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.AustraliaPost">
             <summary>
             AustraliaPost barcode class.
             </summary>
             <remarks>
             Australia Post is a type of 4-State bar code. Each symbol comprises four types of bars ('states') each of which is identified by both a name and a value. Each bar comprises a 'tracker' (middle section), to which an 'ascender'(top section) and/or 'descender' (bottom section) may be added. Using this 4-State format allows the code to contan more information in a set length than other postal codes while making the symbol easier to decode. It also allows the codes to be reliably printed using simple printing techniques such as dot matrix, bubble/ink jet and laser.
            The value to encode has the following structure: 
             <list type="bullet">
             <item>2 digits for Format Control Code (FCC) which only valid values are: 11, 87, 45, 92, 59, 62, or 44 </item>
             <item>8 digits for Sorting Code or Delivery Point Identifier (DPID)</item>
             <item>Alpha numeric characters (free format) for Customer Information Field (only available for FCC equals to 59, 62, or 44) </item>
             <list type="bullet">
             <item>For FCC equals to 59, this field is limited to 5 characters</item>
             <item>For FCC equals to 62 or 44, this field is limited to 10 characters</item>
             </list>
             </list>
             </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.AustraliaPost.BarsSpacing">
            <summary>
            Gets or sets the gap spacing between bars. Uses UnitOfMeasure
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.AustraliaPost.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.AustraliaPost.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.AustraliaPost.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.AztecCode">
            <summary>
            AztecCode barcode class.
            </summary>
            <remarks>
            A high-density two-dimensional matrix symbology originally created in 1995. The symbology can encode all of the characters in the ASCII character set. The symbol is built on a square grid with a bulls-eye pattern at its center which allows the code to be quickly and easily located.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.BasePDFBarcode2D">
            <summary>
            
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.PDFBarcode2D">
            <summary>
            
            </summary>
        </member>
        <member name="M:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.IsCodeValid">
            <summary>
            Gets a value indicating whether the value to encode specified in the Code property is valid.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.Height">
            <summary>
            Gets the height of the barcode. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.Width">
            <summary>
            Gets the width of the barcode. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.UnitOfMeasure">
            <summary>
            Gets or sets the UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.ForeColor">
            <summary>
            Gets or sets the foreground color of the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.BackColor">
            <summary>
            Gets or sets the background color for the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.Font">
            <summary>
            Gets or sets the font of the text displayed by the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.BarColor">
            <summary>
            Gets or sets the bars' color of the barcode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.BorderColor">
            <summary>
            Gets or sets the barcode border's color. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.BorderWidth">
            <summary>
            Gets or sets the barcode border's width. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.Code">
            <summary>
            Gets or sets the value to encode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.CodeAlignment">
            <summary>
            Gets or sets the text alignment for Code property. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.Text">
            <summary>
            Gets or sets the additional text to show in the barcode image. This is not the value to encode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDFBarcode2D.TextAlignment">
            <summary>
            Gets or sets the text alignment for Text property. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.AztecCode.ErrorCorrection">
            <summary>
            Gets or sets the error correction percentage to apply for Aztec Code symbology. Default is 23. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.AztecCode.SymbolSize">
            <summary>
            Gets or sets the Aztec Code Symbol Size to use on that symbology. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.AztecCode.ModuleSize">
            <summary>
            Gets or sets the module size. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.AztecCode.Rune">
            <summary>
            Gets or sets the Aztec Code Rune value. It must be a value from 0 to 255 and is available for Aztec Code Compact Format only. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.QRCodeErrorCorrectionLevel">
            <summary>
            Specifies the Error Correction Level to apply for QR Code barcode.
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.QRCodeErrorCorrectionLevel.L">
            <summary>
            Approx. 7% of codewords can be restored. Error correction level L is appropriate for high symbol quality and/or the need for the smallest possible symbol. 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.QRCodeErrorCorrectionLevel.M">
            <summary>
            Approx. 15% of codewords can be restored. Level M is described as Standard level and offers a good compromise between small size and increased reliability. 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.QRCodeErrorCorrectionLevel.Q">
            <summary>
            Approx. 25% of codewords can be restored. Level Q is a High reliability level and suitable for more critical or poor print quality applications. 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.QRCodeErrorCorrectionLevel.H">
            <summary>
            Approx. 30% of codewords can be restored. Level H offers the maximum achievable reliability. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.BearerBarStyle">
            <summary>
            Specifies the bearer bars type that must be drawn with the barcode.
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.BearerBarStyle.None">
            <summary>
            No bearer bars are drawn on the barcode 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.BearerBarStyle.Frame">
            <summary>
            The bearer bars are drawn surrounding the symbol 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.BearerBarStyle.HorizontalRules">
            <summary>
            The bearer bars are drawn at the top and bottom on the symbol 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Code128">
            <summary>
            Specifies the characters set to use in the Code 128 symbology. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.FIM">
            <summary>
            Specifies the facing identification mark (FIM) pattern to use on that barcode. 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.FIM.A">
            <summary>
            Used for Courtesy Reply Mail (CRM) and Meter Reply Mail (MRM) with a preprinted barcode. 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.FIM.B">
            <summary>
            Used for Business Reply Mail (BRM) without a preprinted BRM ZIP+4 barcode. 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.FIM.C">
            <summary>
            Used for Business Reply Mail (BRM) with a preprinted BRM ZIP+4 barcode. 
            </summary>
        </member>
        <member name="F:PDFTech.Barcodes.FIM.D">
            <summary>
            Used only with information based indicia (IBI) postage. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Codabar">
            <summary>
            Codabar barcode class.
            </summary>
            <remarks>
            (Also known as Codeabar, Ames Code, NW-7, Monarch, Rationalized Codabar, ANSI/AIM BC3-1995, USD-4) This symbology was designed by Pitney Bowes to be accurately read even when printed on dot-matrix printers for multi-part forms such as FedEx airbills and blood bank forms.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.BarWidth">
            <summary>
             Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.StartChar">
            <summary>
            Gets or sets the start character for Codabar symbology. Possible values are: A, B, C or D. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.StopChar">
            <summary>
            Gets or sets the stop character for Codabar symbology. Possible values are: A, B, C or D. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.DisplayStartStopChar">
            <summary>
            Gets or sets whether start and stop characters must be displayed in the barcode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Codabar.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Code11">
            <summary>
            Code11 barcode class.
            </summary>
            <remarks>
            (Also known as USD-8) A High-density symbology able to encode numbers 0 - 9, the dash symbol (-) and start/stop characters. Code 11 is not very secure and printing imperfections can easily convert one character into an alternate valid character. One or two check characters are used to improve data integrity.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code11.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code11.BarWidth">
            <summary>
             Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code11.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code11.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code11.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Code_128">
            <summary>
            Code128 barcode class.
            </summary>
            <remarks>
            (Also known as GS1-128, UCC/EAN-128) A very effective, high-density symbology capable of encoding a relatively large amount of data in a relatively small amount of space. It can encode all 128 ASCII characters and is also capable of encoding two numbers into one character width using one of the three available code sets.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.BarWidth">
            <summary>
             Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.CharSet">
            <summary>
            Gets or sets the characters set to use in the Code 128 symbology.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.BearerBarStyle">
            <summary>
            Bearer bars type.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.BearerBarWidth">
            <summary>
            Bearer bars size. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code_128.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.Code16k">
            <summary>
            Code16k barcode class.
            </summary>
            <remarks>
            The Code 16K barcode is a multiple-row bar code that can encode the full ASCII character set below ASCII 128. It uses existing UPC and Code 128 character set patterns. Up to 77 full ASCII characters or 154 numeric characters can be encoded. These characters are encoded into 2 to 16 rows. Each row is divided by a separator bar. The top and bottom of the symbol also have separator bars that extend to the ends of the minimum quiet zones.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Code16k.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Code16k.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Code16k.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Code16k.Mode">
            <summary>
            Gets or sets the mode to use for Code16k symbology
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Code32">
            <summary>
            Code32 barcode class.
            </summary>
            <remarks>
            Used in Italy only, for coding pharmaceuticals, cosmetics and dietetics. Uses a specific encoding that represents in Code 39 the ascii code of digits, converted in base 32.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Code39">
            <summary>
            Code39 barcode class.
            </summary>
            <remarks>
            (Also known as USS Code 39, Code 3/9, Code 3 of 9, USD-3, Alpha39) The first alpha-numeric symbology that originally encoded 39 characters (now 43) including uppercase letters (A - Z), digits (0 - 9) and a few special characters like the $ sign. The entire ASCII character set can be encoded using Code 39’s Full ASCII mode. The bar code does not contain a check digit but is considered self-checking because a single erroneously decoded bar can not generate another valid character. The code has very low data density compared to other 1D codes which does not make it feasible for small space applications.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code39.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code39.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code39.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code39.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code39.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code39.DisplayStartStopChar">
            <summary>
            Gets or sets whether start and stop characters must be displayed in the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code39.Extended">
            <summary>
            Gets or sets whether the extended versions for this barcode must be used. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Code93">
            <summary>
            Code93 barcode class.
            </summary>
            <remarks>
            An alphanumeric, variable length symbology designed to provide a higher density and data security enhancement to Code 39. Every symbol includes two check characters and is capable of combining characters to unambiguously represent all 128 ASCII characters.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code93.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code93.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code93.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code93.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code93.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code93.DisplayStartStopChar">
            <summary>
            Gets or sets whether start and stop characters must be displayed in the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Code93.Extended">
            <summary>
            Gets or sets whether the extended versions for this barcode must be used. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.DeutschePostIdentcode">
            <summary>
            DeutschePostIdentcode barcode class.
            </summary>
            <remarks>
            Identcode barcode Symbology is used by German Post (Deutsche Post AG) (Deutsche Frachtpost). Also known as: Deutsche Post AG Identcode, German Postal 2 of 5 Identcode, Deutsche Post AG (DHL), Deutsche Frachtpost Identcode, Identcode, CodeIdentcode. The Identcode contains a tracking number providing an identification of the customer (sender) and the mail piece. The value to encode length is 11 digits plus 1 digit checksum which is calculated automatically. The value to encode must have the following structure:
            <list type="bullet">
            <item>2 digits for ID of primary distribution center.</item>
            <item>3 digits for Customer ID.</item>
            <item>6 digits for Mailing number.</item>
            </list>
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.UspsTrayLabel">
            <summary>
            UspsTrayLabel barcode class.
            </summary>
            <remarks>
            Tray Label is used by United States Postal Services (USPS) for: 
            <list type="bullet">
            <item>labeling of postal trays,</item>
            <item>automation rate mailings,</item>
            <item>periodicals and standard mail (letter size and flat size pieces).</item>
            <para>
            It contains the "ZIP code" of the receiver and a "Content Identifier Number". The value to encode length is fixed to 10 digits and it must have the following structure:
            <list type="bullet">
            <item>5 digits for "ZIP code" (express, priority, first-class, periodicals, standard, package) </item>
            <item>3 digits for "Content Identifier Number" [CIN] (mailing class, presorting, automation process sack)</item>
            <item>2 digits for "Processing Code"</item>
            </list>
            </para>
            </list>
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Industrial2of5">
            <summary>
            Industrial2of5 barcode class.
            </summary>
            <remarks>
            Industrial 2 of 5 (developed in 1960s) is a low-density, variable-length numeric symbology. The symbology is called "2 of 5" due to the fact that digits are encoded with 5 bars, 2 of which are always wide (generally 3 times as wide as narrow bar) and the remaining three are narrow. The spaces in the barcode exist only to separate the bars themselves. The exact size of the spaces is not critical, but is generally the same width as a narrow bar.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Industrial2of5.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Industrial2of5.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Industrial2of5.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Industrial2of5.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Industrial2of5.BearerBarStyle">
            <summary>
            Bearer bars type.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Industrial2of5.BearerBarWidth">
            <summary>
            Bearer bars size. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Industrial2of5.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.DeutschePostLeitcode">
            <summary>
            DeutschePostLeitcode barcode class.
            </summary>
            <remarks>
            Leitcode barcode Symbology is used by German Post (Deutsche Post AG) (Deutsche Frachtpost). Also known as: German Postal 2 of 5 Leitcode, CodeLeitcode, Leitcode, Deutsche Post AG (DHL). The Leitcode gives an indication of the destination. The value to encode length is fixed to 13 digits plus 1 digit checksum which is calculated automatically. The value to encode must have the following structure:
            <list type="bullet">
            <item>5 digits for Postal code (Postleitzahl, PLZ)</item>
            <item>3 digits for Street ID/number</item>
            <item>3 digits for House number</item>
            <item>2 digits for Product code</item>
            </list>
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.BaseEan">
            <summary>
            
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.Supplement">
            <summary>
            Gets or sets the supplement type 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.SupplementSeparation">
            <summary>
            Gets or sets the gap separation between the barcode and its supplement. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.SupplementTopMargin">
            <summary>
            Gets or sets the height of the margin above the supplement bars.It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.SupplementCode">
            <summary>
            Gets or sets the supplement code.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.GuardBar">
            <summary>
            Gets or sets whether guard bars must be drawn. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.GuardBarHeight">
            <summary>
            Gets or sets the guard bars' height. It's uses UnitOfMeasure
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.BaseEan.DisplayLightMarginIndicator">
            <summary>
            Gets or sets whether light margin indicators must be displayed in the barcode.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Itf14">
            <summary>
            Itf14 barcode class.
            </summary>
            <remarks>
            The ITF-14 barcode is used to create the Shipping Container Symbol. ITF-14 is created using Interleaved 2 of 5 symbology. and contains 14 digits including 1 checksum character which can be added automatically. 
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Ean13">
            <summary>
            Ean13 barcode class
            </summary>
            <remarks>
            The European Article Numbering system, EAN, developed in 1977, is a superset of UPC. EAN-13 is a numeric, continuous and fixed-length code. The EAN-13 symbol contains the same number of digits as UPC-A. It also includes a thirteenth digit as a check character, calculated using the Modulo 10 algorithm.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Jan13">
            <summary>
            Jan13 barcode class.
            </summary>
            <remarks>
            JAN-13 (Japanese Article Numbering) barcode Symbology is another name for EAN-13 barcode Symbology. For JAN barcodes the first two digits must be 45 or 49 which identifies Japan.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Isbn">
            <summary>
            Isbn barcode class
            </summary>
            <remarks>
            An International Standard Book Number (ISBN) is a unique identification of a title or edition of a book or other monographic publication published or produced by a specific publisher or producer. ISBN is a numeric code and has fixed-length. The ISBN is used in all branches of the book sector.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Issn">
             <summary>
             Issn barcode class.
             </summary>
             <remarks>
             ISSN (International Standard Serial Number) is a numbering system for serial publications. ISSN is a numeric code and has fixed length.
            <para>ISSN is an 8 digit number encoded using EAN-13 symbology with "977" as the prefix. The eigth digit of the ISSN is a control digit calculated using a modulo 11 algorithm from the preceding 7 digits.</para>
             </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Ean8">
            <summary>
            Ean8 barcode class.
            </summary>
            <remarks>
            EAN-8 is a shorter version of EAN-13. EAN-8 encodes 8 digits, which includes a 2 to 3 digit number system and a 4 to 5 digit product code. EAN-8 is encoded using EAN-13 character set.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Jan8">
            <summary>
            Jan8 barcode class.
            </summary>
            <remarks>
            JAN-8 (Japanese Article Numbering) barcode Symbology is another name for EAN-8 barcode Symbology. For JAN barcodes the first two digits must be 45 or 49 which identifies Japan.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.MicroPdf417">
            <summary>
            MicroPDF417 barcode class.
            </summary>
            <remarks>
            MicroPDF417 is derived from PDF417 and intended for applications where the symbol must be smaller than what PDF417 will allow. The code has a limited set of symbol sizes and a fixed level of error correction. One of three compaction modes can be specified: data, text or numeric. Text Compaction mode permits all printable ASCII characters to be encoded (values 32 to 126 inclusive) as well as selected control characters. Byte Compaction mode permits all 256 possible 8-bit byte values to be encoded. This includes all ASCII characters value 0 to 127 inclusive and provides for international character set support. Numeric compaction mode encodes only numbers 0-9.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.MacroPdf417">
            <summary>
            MacroPdf417 barcode class.
            </summary>
            <remarks>
            Macro PDF417 provides a means for creating a distributed representation of files too large to be represented by a single PDF417 symbol. Macro PDF417 symbols differ from ordinary PDF417 symbols in that they contain additional control information used to support this distributed representation. This allows a decoder to make use of this information to correctly reconstruct and verify the file, independent of the symbol scanning order.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.PDF417">
            <summary>
            PDF417 barcode class.
            </summary>
            <remarks>
            PDF417 is a 2-dimensional stacked bar code created by Symbol Technologies in 1991. It is one of the most popular 2D codes because of its ability to be read with slightly modified handheld laser or linear CCD scanners. PDF stands for Portable Data File and 417 represents the 17 modules of 4 bars and spaces that make up each code. Each symbol also has start and stop bar groups that allow the code to be easily identified.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.CompactionType">
            <summary>
            Gets or sets the Compaction Type.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.ErrorCorrectionLevel">
            <summary>
            Gets or sets the Error Correction Level 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.Rows">
            <summary>
            Gets or sets the number of rows
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.Columns">
            <summary>
            Gets or sets the number of columns 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.Truncated">
            <summary>
            Gets or sets whether the right side of PDF417 barcode is truncated 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.PDF417.AspectRatio">
            <summary>
            Gets or sets the ratio of the height to the overall width of the barcode. Its value must be zero up to one. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.MacroPdf417.SegmentCount">
            <summary>
            Gets or sets the number of symbols. Its value must be less than or equal to 99999. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.MacroPdf417.SegmentIndex">
            <summary>
            Gets or sets the Segment Index of the barcode. Its value must be 0 (zero) up to 99998 and must be less than the value in SegmentCount property. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.MacroPdf417.FileId">
            <summary>
            Gets or sets the File ID of the barcode. Its value must be a sequence of codewords (Each codeword value must be a number between 000 and 899) and must be the same for all data segments. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.MicroPdf417.SymbolSize">
            <summary>
            Gets or sets the MicroPDF417 size (a predefined combinations of numbers of columns and rows) to be generated. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Msi">
            <summary>
            Msi barcode class.
            </summary>
            <remarks>
            MSI (Modified Plessy Code) developed by MSI Data Corporation, also known as Modified Plessy, is a variation of original Plessy Code. MSI is a variable-length symbology, however various applications use fixed length codes. MSI symbology does not have any self-checking capabilities.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Msi.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Msi.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Msi.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Msi.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Msi.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.NumlyNumber">
            <summary>
            NumlyNumber barcode class.
            </summary>
            <remarks>
            It is a unique identifier that allows an author or publisher to assign to content and track licensing of each id assignment. Numly Numbers are useful if you wish to identify each electronic distributed copy of any form of electronic media. Media types could include: Blogs, Emails, MP3s, Videos, PDFs, eBooks, Software, Websites, etc. Numly Numbers can also act a third-party content submission time stamps to aid in copyright proving instances and emails. The Numly Number consists of a 19 digit number generated by an algorithm by Numly.com
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Opc">
            <summary>
            Opc barcode class.
            </summary>
            <remarks>
            The OPC code is used for marking retail optical products. The value to encode length is fixed to 10 digits and it must have the following structure:
            <list type="bullet">
            <item>5 digits for Manufacturer Identification Number assigned by the Optical Product Code Council, Inc. </item>
            <item>4 digits Item Identification Number assigned and controlled by the optical manufacturer. The item identification number must be unique to each individual product.</item>
            <item>1 digit for checksum which is calculated automatically.</item>
            </list>
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.CompactPdf417">
            <summary>
            CompactPdf417 barcode class.
            </summary>
            <remarks>
            PDF417 barcode will be drawn in the compact mode. In earlier specifications of PDF417, this was called Truncated PDF417. Compact PDF417 is a preferred term to avoid confusion with the more general use of the term 'truncated'.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Pharmacode">
            <summary>
            Pharmacode barcode class
            </summary>
            <remarks>
            Pharmacode is a bar code standard, used in the pharmaceutical industry as a packing control system. It is designed to be readable despite printing errors. Pharmacode is a directional bar code that can only be read in one direction. It can be printed in multiple colors as a check to ensure that the remainder of the packaging (which the pharmaceutical company must print to protect itself from legal liability) is correctly printed. The correct terminology for this is actually "Pharmaceutical Binary Code"
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pharmacode.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pharmacode.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pharmacode.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pharmacode.ThickBarWidth">
            <summary>
            Gets or sets the width of Pharmacode Thick Bars. It's uses UnitOfMeasure 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pharmacode.ThinBarWidth">
            <summary>
            Gets or sets the width of Pharmacode Thin Bars. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pharmacode.BarsSpacing">
            <summary>
            Gets or sets the gap spacing between bars. Uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pharmacode.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Planet">
            <summary>
            Planet barcode class.
            </summary>
            <remarks>
            The PostaL Alpha Numeric Encoding Technique (PLANET) barcode is used by the United States Postal Service to identify and track pieces of mail during delivery. Each code is either 12 or 14 digits long and encodes data in half and full-height bars similar to the POSTNET symbology. The code always starts and ends with a full bar (often called a guard rail) and each individual digit is represented by a set of five bars using a two-out-of-five code where two of the bars are always short.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Planet.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Planet.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Planet.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Planet.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Planet.ShortBar">
            <summary>
            Gets or sets the short bars' height of Planet symbology. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Planet.TallBar">
            <summary>
            Gets or sets the tall bars' height of Planet symbology. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Postnet">
            <summary>
            Postnet barcode class.
            </summary>
            <remarks>
            POSTNET is a barcode symbology that is used by the United States Postal Service to assist in directing mail. The ZIP Code or ZIP+4 code is encoded in this unique symbology that encodes data in half- and full-height bars. Most often, the delivery point is added, usually being the last two digits of the address or PO box number. The symbol is encoded very similar to the PLANET code except that each set of five bars has two large bars out of five.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Postnet.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Postnet.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Postnet.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Postnet.HeightTallBar">
            <summary>
            Gets or sets the tall bars' height of Postnet symbology. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Postnet.HeightShortBar">
            <summary>
            Gets or sets the short bars' height of Postnet symbology. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Postnet.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Pzn">
            <summary>
            Pzn barcode class.
            </summary>
            <remarks>
            PZN is used for distribution of pharmaceutical / health care products in Germany. The value to encode length is fixed to 6 digits plus 1 digit checksum which is calculated automatically.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pzn.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pzn.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pzn.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pzn.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Pzn.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.QRCode">
            <summary>
            QRCode barcode class.
            </summary>
            <remarks>
            A QR Code is a 2D matrix code created by the Japanese corporation Denso-Wave in 1994. The "QR" is derived from "Quick Response", as the creator intended the code to allow its contents to be decoded at high speed. QR Codes are currently the most popular type of two dimensional code in Japan. Their popularity is increasing with applications like storing addresses, URLs and business card contact information that can be captured and utilized by mobile phones equipped with a camera.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.QRCode.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.QRCode.QRCodeEncoding">
            <summary>
            Gets or sets the encoding to use on that barcode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.QRCode.ErrorCorrectionLevel">
            <summary>
            Gets or sets the Error Correction Level. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.QRCode.ModuleSize">
            <summary>
            Gets or sets the module size. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.QRCode.SymbolSize">
            <summary>
            Gets or sets the symbol size to use on that barcode. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Kix">
            <summary>
            Kix barcode class.
            </summary>
            <remarks>
            The KIX-code was created in 1999 for sorting letters in the Netherlands. It is another type of 4-State bar code and is an abbreviation for Klant IndeX (Client Index). The KIX is a simple bar code where each letter or number is represented by four bars.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Kix.BarsSpacing">
            <summary>
            Gets or sets the gap spacing between bars. Uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Kix.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Kix.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.DataMatrix">
            <summary>
            DataMatrix barcode class.
            </summary>
            <remarks>
            A Data Matrix code is a two-dimensional matrix barcode consisting of black and white square modules arranged in either a square or rectangular pattern. The information to be encoded can be text or raw data. Usual data size is from a few bytes up to 2 kilobytes. The length of the encoded data depends on the symbol dimension used. Error correction codes are added to increase symbol strength: even if they are partially damaged, they can still be read. A Data Matrix symbol can store up to 2,335 alphanumeric characters.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode2D.Semacode">
            <summary>
            Semacode barcode class.
            </summary>
            <remarks>
            The fundamental concept of semacode is the URL barcode. A barcode is a machine readable visual tag, and a URL (Universal Resource Locators) is an internet address. Semacode Tag is the encoding of URLs into barcodes based on Data Matrix 2D Symbology.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Semacode.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Semacode.SymbolSize">
            <summary>
            Gets or sets the symbol size to use on that barcode. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Semacode.ModuleSize">
            <summary>
            Gets or sets the module size. It's uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Semacode.ProcessTilde">
            <summary>
            Gets or sets whether tilde character should be processed.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode2D.Semacode.Encoding">
            <summary>
            Gets or sets the encoding to use on that barcode.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.RoyalMail">
            <summary>
            RoyalMail barcode class.
            </summary>
            <remarks>
            RM4SCC is the bar code symbology used by the Royal Mail for its Cleanmail service. It is a type of 4-State Bar Code that enables UK postcodes to easily be read by a machine at high speed. The bar code encodes the postcode as well as the delivery point suffix and a checksum character. There are strict guidelines governing usage of these bar codes, which allow for maximum readability by machines. They are used with Royal Mail's Cleanmail system to allow businesses to easily and cheaply send large quantities of letters.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.SingaporePost">
            <summary>
            SingaporePost barcode class.
            </summary>
            <remarks>
            This Symbology is used by Singapore Post (SingPost) for Postal code and automatic mail sorting. It’s based on RM4SCC and provides information about the address of the receiver.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.SingaporePost.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.SingaporePost.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.SingaporePost.AddStartStopChar">
            <summary>
            Gets or sets whether start and stop characters must be added in the barcode.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.SingaporePost.BarsSpacing">
            <summary>
            Gets or sets the gap spacing between bars. Uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.SingaporePost.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.SingaporePost.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.SwissPostParcel">
             <summary>
             SwissPostParcel barcode class.
             </summary>
             <remarks>
             It identifies each parcel. All parcels must have a unique barcode. The barcode is the requirement for automated processing. The structure of the Swiss Post Parcel barcode is 18 numeric digits:
             <list type="bullet">
            <item>2 digits for Swiss Post reference ,</item>
             <item>8 digits for Franking license number,</item>
             <item>8 digits for Item number.</item>
             </list>
             </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Telepen">
            <summary>
            Telepen barcode class.
            </summary>
            <remarks>
            Telepen is a name of a bar code symbology designed in 1972 in the UK to express all 128 ASCII characters without using shift characters for code switching, unlike Code 128, while only using two different widths for bars and spaces. Unlike most linear barcodes that specify the encodings for each representable character, Telepen only defines 4 basic bar-space modules.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Telepen.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Telepen.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Telepen.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Telepen.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Telepen.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Telepen.Encoding">
            <summary>
            Gets or sets the encoding to use on that symbology. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Scc14">
            <summary>
            Scc14 barcode class.
            </summary>
            <remarks>
            SCC-14 (Shipping Container Code) is a 14-digit number assigned to fixed content shipping containers. The most widely used representation of SCC-14 is based on UCC/EAN-128 Barcode Symbology with the Application Identifier (AI) 01. However, other common implementation of SCC is called ITF-14.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.UccEan128">
            <summary>
            UccEan128 barcode class.
            </summary>
            <remarks>
            EAN-128 / UCC-128 is the same as Code 128, except, EAN 128 defines a set of application identifiers (AI's), and associated rules for defining a code. UCC/EAN-128 encodes data as well as defining what that data represents. SSC 14 (UCC 14, DUN 14) and SSCC 18 (UCC-18) can be encoded via UCC 128 by using appropriate application identifier.
            <para>
            An Application Identifier (AI) is a prefix code used to identify the meaning and the format of the data that follows it (data field). There are application identifiers for identification, traceability, dates, quantity, measurements, locations, and many other types of information. For example, the AI for batch number is 10, and the batch number AI is always followed by an alphanumeric batch code not to exceed 20-characters.
            </para>
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UccEan128.Ratio">
            <summary>
            Wide/narrow bar ratio.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UccEan128.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UccEan128.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UccEan128.AddChecksum">
            <summary>
            True if checksum should be added.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UccEan128.BearerBarStyle">
            <summary>
            Bearer bars type.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UccEan128.BearerBarWidth">
            <summary>
            Bearer bars size. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UccEan128.DisplayChecksum">
            <summary>
            True if checksum should be visible in barcode text.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Sscc18">
             <summary>
             Sscc18 barcode class.
             </summary>
             <remarks>
             The Serial Shipping Container Code is used to identify individual shipping containers. This is used, generally, to establish a number that is unique worldwide to track a specific container.
            <para>SSCC-18 is encoded with Code128 symbology (UCC/EAN-128). Barcode is 18 characters long including 1 checksum character which can be added automatically, and has the following structure: </para>
             <list type="bullet">
             <item>Packaging Type (1 character). </item>
             <list type="bullet">
             <item>0=Case or carton.</item>
             <item>1=Pallet (Larger than a case).</item>
             <item>2=Container (larger than a pallet).</item>
             <item>3=Undefined.</item>
             <item>4=Internal company use.</item>
             <item>5-8=Reserved.</item>
             <item>9=Variable container.</item>
             </list>
             <item>UPC/EAN Manufacturer Number (variable length). This is the same company code used in EAN-8/EAN-13/UPC-A barcodes. </item>
             <item>Serial Number (variable Length). This is a unique serial number assigned by the manufacturer. </item>
             <item>Check digit(1 character).</item>
             </list>
             <para>Two digits, called Application Identifier (AI) are added at the beginning of the barcode (00). </para>
             </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.UpcA">
            <summary>
            UpcA barcode class.
            </summary>
            <remarks>
            The UPC-A (Universal Product Code, invented in 1973) is a 12 digit, numeric symbology used in retail applications and is by far the most common and well-known barcode symbology in the United States. It is designed to uniquely identify a product and its manufacturer. You will find UPC-A barcode on virtually every consumer good at your local supermarket, as well as on books, magazines, and newspapers.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Upc_E">
            <summary>
            Upc_E barcode class.
            </summary>
            <remarks>
            UPC-E is a compacted form of UPC-A where the extra zeros are elimanated. The resulting barcode can be used on small packages as the barcode size is roughly half that of UPC-A.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.Upc_E.System">
            <summary>
            Gets or sets the number system to use.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.UspsFim">
            <summary>
            UspsFim barcode class.
            </summary>
            <remarks>
            The Facing Identification Mark, or FIM, is a bar code designed by the United States Postal Service to assist in the automated processing of mail. The FIM is a set of vertical bars printed on the envelope or postcard near the upper edge, just to the left of the postage area (the area where the postage stamp or its equivalent is placed). The FIM is intended for use primarily on preprinted envelopes and postcards and is applied by the company printing the envelopes or postcards, not by the USPS.
            <para>The four codes have the following uses: </para>
            <list type="bullet">
            <item>FIM A is used for courtesy reply mail and metered reply mail with a preprinted POSTNET bar code. In both of these types of mail, the postage is prepaid, either by a postage stamp in the case of courtesy reply mail or by a postage meter in the case of metered reply mail.</item>
            <item>FIM B is used for business reply mail without a preprinted ZIP+4 bar code.</item>
            <item>FIM C is used for business reply mail with a preprinted ZIP+4 bar code.</item>
            <item>FIM D is used only with IBI postage.</item>
            </list>
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UspsFim.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UspsFim.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UspsFim.Pattern">
            <summary>
            Gets or sets the FIM pattern to use on that symbology. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UspsHorizontalBars.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UspsHorizontalBars.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.UspsHorizontalBars.Count">
            <summary>
            Gets or sets the number of horizontal bars to be drawn. 
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.IntelligentMail">
            <summary>
            IntelligentMail barcode class.
            </summary>
            <remarks>
            (Also known as USPS 4CB, OneCode Solution Barcode, OneCode ACS) The Intelligent Mail® barcode (formally known as the 4-State Customer Barcode) is the next generation of USPS® bar code technology used to sort and track letters and flats. Intelligent Mail® bar code technology, among other things, combines the capabilities of the POSTNET barcode and the Planet Code® bar code into one unique bar code. The 31-digit Intelligent Mail barcode (65 bars) is slightly longer than the 11-digit POSTNET barcode (62 bars), and it offers mailers certain flexibility in choosing the height and width of the bar code.
            </remarks>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.IntelligentMail.BarsSpacing">
            <summary>
            Gets or sets the gap spacing between bars. Uses UnitOfMeasure.
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.IntelligentMail.BarHeight">
            <summary>
            Gets or sets the barcode bar's height. Uses UnitOfMeasure. 
            </summary>
        </member>
        <member name="P:PDFTech.Barcodes.Barcode1D.IntelligentMail.BarWidth">
            <summary>
            Gets or sets the barcode bar's width. Uses UnitOFMeasure.
            </summary>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.Interleaved2of5">
            <summary>
            Interleaved2of5 barcode class.
            </summary>
            <remarks>
            Interleaved 2 of 5 is a high-density, variable-length, bi-directional, self-checking, continuous, numeric symbology. It has the name "Interleaved" because two numeric digits are interleaved together, with the bars representing one digit and the spaces representing a second digit.
            </remarks>
        </member>
        <member name="T:PDFTech.Barcodes.Barcode1D.UspsSackLabel">
            <summary>
            UspsSackLabel barcode class.
            </summary>
            <remarks>
            Sack Label is used by United States Postal Services (USPS) for: 
            <list type="bullet">
            <item>labeling of postal sacks,</item>
            <item>automation rate mailings,</item>
            <item>periodicals and standard mail (letter size and flat size pieces).</item>
            </list>
            <para>
            It contains the "ZIP code" of the receiver and a "Content Identifier Number". The value to encode length is fixed to 8 digits and it must have the following structure:
            <list type="bullet">
            <item>5 digits for "ZIP code" (express, priority, first-class, periodicals, standard, package) </item>
            <item>3 digits for "Content Identifier Number" [CIN] (mailing class, presorting, automation process sack)</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="T:PDFTech.PDFCustomAnnotation">
            <summary>
            PDFCustomAnnotation is the base class of all annotations.
            </summary>
        </member>
        <member name="P:PDFTech.PDFCustomAnnotation.Flags">
            <summary>
            Specify the behavior of the annotation when printed, rotated etc.
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.BorderColor">
            <summary>
            Specifies the border color of the PDF control.
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.Charset">
            <summary>
            Gets or sets annotation charset.
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.PopupRectangle">
            <summary>
            Gets or sets the rectangle of the popup window. 
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.Caption">
            <summary>
            Gets or sets annotation caption
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.Text">
            <summary>
            Gets or sets annotation Text
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.Subject">
            <summary>
            Gets or sets annotation subjects
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.LastModified">
            <summary>
            Gets or sets the last modified date time
            </summary>
        </member>
        <member name="P:PDFTech.BaseAnnotation.Opacity">
            <summary>
            Get or sets annotation opacity.
            </summary>
        </member>
        <member name="T:PDFTech.Canvas">
            <summary>
            Canvas provides a drawing space for objects that must render their own images on CurrentPage.
            </summary>
            <remarks>
            The class supports drawing and filling a variety of shapes and lines, writing text and rendering graphic images.
            </remarks>
        </member>
        <member name="M:PDFTech.Canvas.Add1DBarcode(PDFTech.Barcodes.Barcode1D.PDFBarcode1D,System.Double,System.Double)">
            <summary>
            This function adds a linear barcode to the canvas. 
            </summary>
            <param name="Barcode"></param>
            <param name="X">Barcode X position</param>
            <param name="Y">Barcode Y position</param>
            <remarks>Using the Add1DBarcode method, you may add many different types of linear barcodes to the canvas.</remarks>
            <example>
            The example below shows how a linear barcode can be added to a PDF document. 
            <code>
             PDFDocument doc = new PDFDocument("barcode.pdf");
             doc.AutoLaunch = true;
             PDFTech.Barcodes.Barcode1D.Ean13 ean13 = new PDFTech.Barcodes.Barcode1D.Ean13("123456789012", UnitOfMeasure.Pixel);           
             if (ean13.IsCodeValid())
             {
                 doc.CurrentPage.Body.Add1DBarcode(ean13, 130, 100);
             }
             if (!doc.Save())
                 Console.WriteLine(doc.Error);
            </code>
            </example>
        </member>
        <member name="M:PDFTech.Canvas.Add2DBarcode(PDFTech.Barcodes.Barcode2D.PDFBarcode2D,System.Double,System.Double)">
            <summary>
            This function adds a two dimensional barcode to the canvas.
            </summary>
            <param name="barcode"></param>
            <param name="X">Barcode X position</param>
            <param name="Y">Barcode Y position</param>
            <remarks>Using the Add2DBarcode method, you may add many different types of two dimensionalbarcodes to the canvas.</remarks>
            <example>
             The example below shows how a two dimensional barcode can be added to a PDF document.
            <code>
            PDFDocument doc = new PDFDocument("barcode.pdf");
            doc.AutoLaunch = true;
            PDFTech.Barcodes.Barcode2D.DataMatrix dataMatrix = new PDFTech.Barcodes.Barcode2D.DataMatrix("123456789 PDFTech", UnitOfMeasure.Pixel);           
            if (dataMatrix.IsCodeValid())
            {
                doc.CurrentPage.Body.Add2DBarcode(dataMatrix, 130, 100);
            }
            if (!doc.Save())
                Console.WriteLine(doc.Error);
            </code>
            </example>
        </member>
        <member name="M:PDFTech.Canvas.AddMetaFile(System.Drawing.Imaging.Metafile)">
            <summary>
            Procedure paints context of the metafile on the page.
            </summary>
            <param name="MF">Metafile file to be rendered</param>
        </member>
        <member name="M:PDFTech.Canvas.AddMetaFile(System.Drawing.Imaging.Metafile,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Procedure paints context of the metafile on the page.
            </summary>
            <param name="MF"> Metafile file to be rendered </param>
            <param name="x">Top level corner left value</param>
            <param name="y">Top level corner top value</param>
            <param name="XScale">Scale of width when painting on the page.</param>
            <param name="YScale">Scale of height when painting on the page.</param>
        </member>
        <member name="M:PDFTech.Canvas.AddText(System.String)">
            <summary>
            This function allows text to be writtento the canvas.        
            </summary>
            <remarks>
            The AddText function allows the writing of text regardless of text size or length. If the amount of text to be written exceeds the page capacity, overflowing text is automatically rendered on the next page. The returned value indicates the current page. The current position can be traced from the <see cref="P:PDFTech.Canvas.Cursor">Cursor</see> value.
            </remarks>
            <param name="Text">Text to be written</param>        
        </member>
        <member name="M:PDFTech.Canvas.AddTaggedText(System.String)">
            <summary>
            This function allows the writing of tagged text to the canvas.        
            </summary>
            <remarks>
            The AddTaggedText function allows the writing of text regardless of text size or length. If the amount of text to be written exceeds the page capacity, overflowing text is automatically rendered on the next page. The returned value indicates the current page. The current position can be traced from the <see cref="P:PDFTech.Canvas.Cursor">Cursor</see> value.
            <para> Valid tags are the following:
            <list type="bullet">
            <item>font</item>
            <item>b</item>
            <item>i</item>
            <item>u</item>
            <item>st</item>
            <item>br</item>
            <item>sub</item>
            <item>sup</item>
            <item>a</item>
            <item>p</item>
            <item>hr</item>
            </list>
            </para>
            </remarks>
            <param name="taggedText">Text to be written</param>        
        </member>
        <member name="M:PDFTech.Canvas.SetActiveFont(System.String,PDFTech.PDFFontStyles,System.Double)">
            <summary>
            This procedure sets the active font for text operations. 
            </summary>
            <param name="FontName">Font name</param>
            <param name="fontStyle">Font style</param>
            <param name="FontSize">Font size</param>
            <remarks>
            This function sets the font value of the canvas. PDFTechLib retrieves the required information from the underlying system and embeds this information into the PDF.
            </remarks>
        </member>
        <member name="M:PDFTech.Canvas.SetActiveFont(System.String,PDFTech.PDFFontStyles,System.Double,PDFTech.Charset)">
            <summary>
            This procedure sets the active font for text operations. 
            </summary>
            <param name="FontName">Font name</param>
            <param name="fontStyle">Font style</param>
            <param name="FontSize">Font size</param>
            <param name="FontCharset">Font charset</param>
            <remarks>
            This function sets the font value of the canvas. PDFTechLib retrieves the required information from the underlying system and embeds this information into the PDF.
            </remarks>        
        </member>
        <member name="M:PDFTech.Canvas.SetActiveFont(System.String,PDFTech.PDFFontStyles,System.Double,PDFTech.Charset,System.Drawing.Color)">
            <summary>
            This procedure sets the active font for text operations. 
            </summary>
            <param name="FontName">Font name</param>
            <param name="fontStyle">Font style</param>
            <param name="FontSize">Font size</param>
            <param name="FontCharset">Font charset</param>
            <param name="fontColor">Font color</param>
            <remarks>
            This function sets the font value of the canvas. PDFTechLib retrieves the required information from the underlying system and embeds this information into the PDF.
            </remarks>   
        </member>
        <member name="M:PDFTech.Canvas.SetCjkFont(PDFTech.CJKFonts,PDFTech.PDFFontStyles,System.Double)">
            <summary>
            This function embeds the Chinese, japanese and korean fonts
            </summary>
            <param name="CJKType">CJK type</param>
            <param name="fontStyle">Font style</param>
            <param name="FontSize">Font size</param>
        </member>
        <member name="M:PDFTech.Canvas.SetCharacterSpacing(System.Double)">
            <summary>
            This procedure sets the additional space (in points) that should be inserted between 
            characters.
            </summary>
            <param name="Spacing">Spacing value</param>
        </member>
        <member name="M:PDFTech.Canvas.SetHorizontalScaling(System.Double)">
            <summary>
            This procedure sets the horizontal scaling factor in a percentage. 
            </summary>
            <remarks>
            This essentially expands or compresses the horizontal dimension of the string. The default value 
            for this parameter is 100 (%).
            </remarks>
            <param name="Scale">scale value</param>
        </member>
        <member name="M:PDFTech.Canvas.SetTextRise(System.Double)">
            <summary>
            This procedure sets the "text rise", the amount of text base line offset in the vertical 
            dimension in points (1/72 inches).
            </summary>
            <remarks>
            A positive rise moves the baseline upward, causing subsequent text to become superscript. 
            <para>Similarly, a negative rise may be used to produce subscript text.</para>
            </remarks>
            <param name="Rise">Text rise value</param>
        </member>
        <member name="M:PDFTech.Canvas.TextOut(System.Double,System.Double,System.Double,System.String)">
            <summary>
            This procedure draws a text line "Textstr" using the current font starting at location (x, y) at "orientation" (in degrees).
            </summary>
            <param name="X">Location x value</param>
            <param name="Y">Location y value</param>
            <param name="Orientation">Orientation value</param>
            <param name="TextStr">Text to be written</param>
        </member>
        <member name="M:PDFTech.Canvas.TextOut(System.Double,System.Double,System.Double,System.String,PDFTech.HorJust,PDFTech.VertJust)">
            <summary>
            This procedure draws a text line "Textstr" using the current font starting at location (x, y) at "orientation" (in degrees)
            at vertical and horizontal alignments.
            </summary>
            <param name="X">Location x value</param>
            <param name="Y">Location y value</param>
            <param name="Orientation">Text orientation value</param>
            <param name="TextStr">Text to be written</param>
            <param name="HorizontalAl">Horizontal alignment</param>
            <param name="VerticalAl">Vertical alignment</param>
        </member>
        <member name="M:PDFTech.Canvas.GetTextWidth(System.String)">
            <summary>
            This function return size of  the 'Text' in points for the active font. 
            SetActiveFont must be called before calling this function.
            </summary>
            <param name="Text">text to be measured.</param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.Canvas.AddTextArea(System.Drawing.RectangleF,System.String,System.Boolean)">
            <summary>
            Show 'Text' string inside area bounded Rect
            </summary>
            <param name="Rect">Text bounds</param>
            <param name="Text">Text to be written</param>
            <param name="clipped"></param>        
        </member>
        <member name="M:PDFTech.Canvas.AddTextArea(System.Drawing.RectangleF,System.String,System.Boolean,System.Boolean,System.Single)">
            <summary>
            Show 'Text' string inside area bounded Rect
            </summary>
            <param name="Rect">Text bounds</param>
            <param name="Text">çizilecek text</param>
            <param name="clipped"></param>
            <param name="tagged">If you wish to write tagged text set true</param>
            <param name="orientation">text orientation</param>
            <remarks>
            If you wish to write tagged text to a specific region on the page, use this function.
            <para> Valid tags are the following:
            <list type="bullet">
            <item>font</item>
            <item>b</item>
            <item>i</item>
            <item>u</item>
            <item>st</item>
            <item>br</item>
            <item>sub</item>
            <item>sup</item>
            <item>a</item>
            <item>p</item>
            <item>hr</item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="M:PDFTech.Canvas.AddImage(PDFTech.PDFImage)">
            <summary>
            This procedure place the image to the canvas
            </summary>
            <param name="Image">PDF image</param>
        </member>
        <member name="M:PDFTech.Canvas.AddImage(PDFTech.PDFImage,System.Double,System.Double)">
            <summary>
            This procedure place the image to the canvas
            </summary>        
            <param name="Image">PDF image</param>
            <param name="x">Location x value</param>
            <param name="y">Location y value</param>        
        </member>
        <member name="P:PDFTech.Canvas.Cursor">
            <summary>
            <see cref="M:PDFTech.Canvas.AddText(System.String)">AddText(string Text)</see> method sets the last location of the cursor. You may also manually set the cursor position.
            </summary>
        </member>
        <member name="P:PDFTech.Canvas.Dimension">
            <summary>
            Canvas Dimension
            </summary>
        </member>
        <member name="M:PDFTech.Body.AddTextAnnotation(System.String,System.String,PDFTech.TextAnnotationIcon,System.Drawing.RectangleF)">
            <summary>
            This function adds a PDF Text Annotation to this page.
            </summary>
            <param name="caption">Annotation caption</param>
            <param name="bodytext">Annotation text</param>
            <param name="icon">Annotation icon</param>
            <param name="Box"></param>
            <returns>This function return PDFTextAnnotation</returns>
        </member>
        <member name="M:PDFTech.Body.AddRubberStampAnnotation(System.String,System.String,PDFTech.RubberStampAnnotationIcon,System.Drawing.RectangleF)">
            <summary>
            This function add a Pdf Rubber Stamp Annotation to this page.
            </summary>
            <param name="caption">Annotation caption</param>
            <param name="bodytext">Annotation text</param>
            <param name="icon"></param>
            <param name="Box"></param>
            <returns>This function return PdfRubberStampAnnotation</returns>
        </member>
        <member name="M:PDFTech.Body.AddLineAnnotation(System.String,System.String,PDFTech.LineEndingStyle,PDFTech.LineEndingStyle,System.Drawing.RectangleF)">
            <summary>
            This function adds a Pdf Line Annotation to this page.
            </summary>
            <param name="caption">Annotation caption</param>
            <param name="bodytext">Annotation text</param>
            <param name="BeginLineStyle"></param>
            <param name="EndLineStyle"></param>
            <param name="Box"></param>
            <returns>This function return PdfLineAnnotation</returns>
        </member>
        <member name="M:PDFTech.Body.AddFileAttachmentAnnotation(System.String,System.String,System.String,PDFTech.FileAttachmentAnnotationIcon,System.Drawing.RectangleF)">
            <summary>
            This function adds a Pdf File Attachment Annotation to this page.
            </summary>
            <param name="caption">Annotation caption</param>
            <param name="bodytext">Annotation text</param>
            <param name="File"></param>
            <param name="Icon"></param>
            <param name="Box"></param>
            <returns>This function return PdfFileAttachmentAnnotation</returns>
        </member>
        <member name="M:PDFTech.Body.AddMarkupAnnotation(System.String,System.String,PDFTech.MarkupStyle,System.Drawing.RectangleF)">
            <summary>
            This function adds a PdfMarkupAnnotation to this page.
            </summary>
            <param name="caption">Annotation caption</param>
            <param name="bodytext">Annotation text</param>
            <param name="MarkupStyle"></param>
            <param name="Box"></param>
            <returns>This function return PdfMarkupAnnotation</returns>
        </member>
        <member name="M:PDFTech.Body.AddAction(System.Drawing.RectangleF,PDFTech.PDFAction)">
            <summary>
            Procedure creates object of PDFActionAnnotation.
            </summary>
            <param name="ARect">Bound of annotation</param>
            <param name="Action">An Action value</param>
            <returns>a <see cref="T:PDFTech.PDFActionAnnotation">PDFActionAnnotation</see> defines an annotation in a PDF file. </returns>
            <remarks>
            This function can be used to place an action on any part of the page
            </remarks>
        </member>
        <member name="M:PDFTech.Body.AddLinkToPage(System.Drawing.RectangleF,System.Int32,System.Double)">
            <summary>
            This procedure places an active hyper-link area for the rectangle bounded by Rect. 
            </summary>
            <remarks>
            Destination is a page of the current PDF document with 'PageIndex' index.
            <para>
            Page with 'PageIndex' index must be created on time of call this procedure.
            </para>
            <para>
            "Top" parameter depends on the location of the display window on that page (offset from top of the page).
            </para>
            </remarks>
            <param name="ARect">Bound of annotation</param>
            <param name="PageIndex">The destination page of the link </param>
            <param name="TopOffset">top offset of the link destination</param>
            <returns>a <see cref="T:PDFTech.PDFActionAnnotation">PDFActionAnnotation</see> defines an annotation in a PDF file. </returns>
        </member>
        <member name="M:PDFTech.Body.AddExternalLink(System.Drawing.RectangleF,System.String)">
            <summary>
            Draws a rectangle as a link to another pdf document. 
            </summary>
            <param name="ARect">Bound of annotation</param>
            <param name="FileName">a file path to the destination document.</param>
            <returns>a <see cref="T:PDFTech.PDFActionAnnotation">PDFActionAnnotation</see> defines an annotation in a PDF file. </returns>
        </member>
        <member name="M:PDFTech.Body.AddFileLink(System.Drawing.RectangleF,System.String)">
            <summary>
            Draws a rectangle as a link to an external file. 
            </summary>
            <param name="ARect">Bound of annotation</param>
            <param name="FileName">a file path to the external file.</param>
            <returns>a <see cref="T:PDFTech.PDFActionAnnotation">PDFActionAnnotation</see> defines an annotation in a PDF file. </returns>
        </member>
        <member name="P:PDFTech.PDFCircleAnnotation.BorderStyle">
            <summary>
            Gets or sets annotation border style.
            </summary>
        </member>
        <member name="P:PDFTech.PDFCircleAnnotation.BorderWidth">
            <summary>
            Gets or set annotation border width
            </summary>
        </member>
        <member name="T:PDFTech.LayoutType">
            <summary>
            Specifies the layout styles options for text extract.
            </summary>
        </member>
        <member name="F:PDFTech.LayoutType.Flowing">
            <summary>
            Flowing layout
            </summary>
        </member>
        <member name="F:PDFTech.LayoutType.Physical">
            <summary>
            Physical layout
            </summary>
        </member>
        <member name="F:PDFTech.LayoutType.Row">
            <summary>
            Row order
            </summary>
        </member>
        <member name="T:PDFTech.EncodingType">
            <summary>
            Specifies the encoding type options for text extract.
            </summary>
        </member>
        <member name="F:PDFTech.EncodingType.ANSI">
            <summary>
            Ansi encoding
            </summary>
        </member>
        <member name="F:PDFTech.EncodingType.Unicode">
            <summary>
            Unicode encoding
            </summary>
        </member>
        <member name="F:PDFTech.EncodingType.UTF8">
            <summary>
            UTF8 encoding
            </summary>
        </member>
        <member name="T:PDFTech.LicensingTypes">
            <summary>
            PDF Technologies licensing types
            </summary>
        </member>
        <member name="F:PDFTech.LicensingTypes.TextToPDF">
            <summary>
            Text to PDF license
            </summary>
        </member>
        <member name="F:PDFTech.LicensingTypes.PDFToText">
            <summary>
            PDF to text license
            </summary>
        </member>
        <member name="F:PDFTech.LicensingTypes.PasswordRecover">
            <summary>
            PDF Password recovery license
            </summary>
        </member>
        <member name="F:PDFTech.LicensingTypes.SplitMergeExtract">
            <summary>
            PDF Split Merge Extract license
            </summary>
        </member>
        <member name="F:PDFTech.LicensingTypes.PDFTechLib">
            <summary>
            PDFTechLib license
            </summary>
        </member>
        <member name="F:PDFTech.LicensingTypes.PDFAConverter">
            <summary>
            PDF/A Converter license
            </summary>
        </member>
        <member name="F:PDFTech.LicensingTypes.Evaluation">
            <summary>
            Evaluation license
            </summary>        
        </member>
        <member name="T:PDFTech.PDFStandards">
            <summary>
            PDF Compliance standarts
            </summary>
        </member>
        <member name="F:PDFTech.PDFStandards.None">
            <summary>
            No PDF Standart applied
            </summary>
        </member>
        <member name="F:PDFTech.PDFStandards.PDFA1b">
            <summary>
            PDF/A Standart applied
            </summary>
        </member>
        <member name="T:PDFTech.UnitOfMeasure">
            <summary>
            Specifies the unit of measure for the given data. 
            </summary>
        </member>
        <member name="F:PDFTech.UnitOfMeasure.Inch">
            <summary>
            Specifies the inch as the unit of measure. 
            </summary>
        </member>
        <member name="F:PDFTech.UnitOfMeasure.Pixel">
            <summary>
            Specifies a device pixel as the unit of measure.
            </summary>
        </member>
        <member name="F:PDFTech.UnitOfMeasure.Mm">
            <summary>
            Specifies the millimeter as the unit of measure. 
            </summary>
        </member>
        <member name="F:PDFTech.UnitOfMeasure.Cm">
            <summary>
            Specifies the centimeter as the unit of measure. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFFontStyles">
            <summary>
            Specifies style information applied to text. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFFontStyles.Regular">
            <summary>
            Normal text. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFFontStyles.Bold">
            <summary>
            Bold text. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFFontStyles.Italic">
            <summary>
            Italic text. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFFontStyles.Underline">
            <summary>
            Underlined text. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFFontStyles.Strikeout">
            <summary>
            Text with a line through the middle. 
            </summary>
        </member>
        <member name="T:PDFTech.AnnotationFlag">
            <summary>
            Specifies the available flags for an annotation. 
            </summary>
        </member>
        <member name="F:PDFTech.AnnotationFlag.Invisible">
            <summary>
            If set, do not display or print the annotation. 
            </summary>
        </member>
        <member name="F:PDFTech.AnnotationFlag.Hidden">
            <summary>
            If set, do not display or print the annotation or allow it to interact with the user. 
            </summary>
        </member>
        <member name="F:PDFTech.AnnotationFlag.Print">
            <summary>
            If set, print the annotation when the page is printed. If clear, never print the annotation, regardless of whether it is displayed on the screen. 
            </summary>
        </member>
        <member name="F:PDFTech.AnnotationFlag.NoZoom">
            <summary>
            If set, do not scale the annotation's appearance to match the magnification of the page. 
            </summary>
        </member>
        <member name="F:PDFTech.AnnotationFlag.NoRotate">
            <summary>
            If set, do not rotate the annotation's appearance to match the rotation of the page. 
            </summary>
        </member>
        <member name="F:PDFTech.AnnotationFlag.NoView">
            <summary>
            If set, do not display the annotation on the screen or allow it to interact with the user. The annotation may be printed (depending on the Print flag), but should be considered hidden for the purposes of onscreen display and user interaction. 
            </summary>
        </member>
        <member name="F:PDFTech.AnnotationFlag.ReadOnly">
            <summary>
            If set, do not allow the annotation to interact with the user. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFPageOrientation">
            <summary>
            Specifies how pages of content are oriented on print media.
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageOrientation.PagePortrait">
            <summary>
            Standard orientation.
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageOrientation.PageLandscape">
            <summary>
            Content of the imageable area is rotated on the page 90 degrees counterclockwise from standard (portrait) orientation.
            </summary>
        </member>
        <member name="T:PDFTech.DataFormat">
            <summary>
            Specifies the available formats for data import/export for AcroForms. 
            </summary>
        </member>
        <member name="F:PDFTech.DataFormat.FDF">
            <summary>
            Form data is imported or exported in FDF format. 
            </summary>
        </member>
        <member name="F:PDFTech.DataFormat.XFDF">
            <summary>
            Form data is imported or exported in XFDF format. 
            </summary>
        </member>
        <member name="F:PDFTech.DataFormat.XML">
            <summary>
            Form data is imported or exported in XML format. 
            </summary>
        </member>
        <member name="T:PDFTech.CJKFonts">
            <summary>
            Defines the available CJK fonts faces. 
            </summary>
        </member>
        <member name="F:PDFTech.CJKFonts.HeiseiKakuGothicW5">
            <summary>
            The Heisei Kaku Gothic W5 japanese font face. 
            </summary>
        </member>
        <member name="F:PDFTech.CJKFonts.HeiseiMinchoW3">
            <summary>
            The Heisei Mincho W3 japanese font face. 
            </summary>
        </member>
        <member name="F:PDFTech.CJKFonts.HanyangSystemsGothicMedium">
            <summary>
            The Hanyang Systems Gothic Medium korean font face. 
            </summary>
        </member>
        <member name="F:PDFTech.CJKFonts.HanyangSystemsShinMyeongJoMedium">
            <summary>
            The Hanyang Systems Shin MyeongJo Medium korean font face. 
            </summary>
        </member>
        <member name="F:PDFTech.CJKFonts.MonotypeHeiMedium">
            <summary>
            The Monotype Hei Medium chinese traditional font face. 
            </summary>
        </member>
        <member name="F:PDFTech.CJKFonts.MonotypeSungLight">
            <summary>
            The Monotype Sung Light chinese traditional font face. 
            </summary>
        </member>
        <member name="F:PDFTech.CJKFonts.SinoTypeSongLight">
            <summary>
            The SinoType Song Light chinese simplified font face. 
            </summary>
        </member>
        <member name="T:PDFTech.PageTransitionEffect">
            <summary>
            Specifies the available transition modes between pages. 
            </summary>
        </member>
        <member name="F:PDFTech.PageTransitionEffect.Split">
            <summary>
            Split transition effect. 
            </summary>
        </member>
        <member name="F:PDFTech.PageTransitionEffect.Blinds">
            <summary>
            Blinds transition effect. 
            </summary>
        </member>
        <member name="F:PDFTech.PageTransitionEffect.Box">
            <summary>
            Box transition effect. 
            </summary>
        </member>
        <member name="F:PDFTech.PageTransitionEffect.Wipe">
            <summary>
            Wipe transition effect. 
            </summary>
        </member>
        <member name="F:PDFTech.PageTransitionEffect.Dissolve">
            <summary>
            Dissolve transition effect. 
            </summary>
        </member>
        <member name="F:PDFTech.PageTransitionEffect.Glitter">
            <summary>
            Glitter transition effect. 
            </summary>
        </member>
        <member name="F:PDFTech.PageTransitionEffect.None">
            <summary>
            No effect when advancing to next page. 
            </summary>
        </member>
        <member name="T:PDFTech.TransitionAngleDirection">
            <summary>
            Specifies the available angles for the transition. 
            </summary>
        </member>
        <member name="F:PDFTech.TransitionAngleDirection.A0">
            <summary>
            0 degrees
            </summary>
        </member>
        <member name="F:PDFTech.TransitionAngleDirection.A90">
            <summary>
            90 degrees
            </summary>
        </member>
        <member name="F:PDFTech.TransitionAngleDirection.A180">
            <summary>
            180 degress
            </summary>
        </member>
        <member name="F:PDFTech.TransitionAngleDirection.A270">
            <summary>
            270 degrees
            </summary>
        </member>
        <member name="F:PDFTech.TransitionAngleDirection.A315">
            <summary>
            315 degrees
            </summary>
        </member>
        <member name="T:PDFTech.TransitionDimension">
            <summary>
            Specifies the available directions for transitions. 
            </summary>
        </member>
        <member name="F:PDFTech.TransitionDimension.Horizontal">
            <summary>
            The transition effect is going on horizontal.  
            </summary>
        </member>
        <member name="F:PDFTech.TransitionDimension.Vertical">
            <summary>
            The transition effect is going on vertical. 
            </summary>
        </member>
        <member name="T:PDFTech.TransitionMotionDirection">
            <summary>
            Specifies the motion direction of the transition.
            </summary>
        </member>
        <member name="F:PDFTech.TransitionMotionDirection.Inward">
            <summary>
            From the border of the page to the center.
            </summary>
        </member>
        <member name="F:PDFTech.TransitionMotionDirection.Outward">
            <summary>
            From the center of the page to the border. 
            </summary>
        </member>
        <member name="T:PDFTech.EncryptionKeySize">
            <summary>
            Specifies the available key sizes when encrypting a pdf document. 
            </summary>
        </member>
        <member name="F:PDFTech.EncryptionKeySize.Use40BitKey">
            <summary>
            A 40 bit encryption key will be used to encrypt the pdf document. 
            </summary>
        </member>
        <member name="F:PDFTech.EncryptionKeySize.Use128BitKey">
            <summary>
            A 128 bit encryption key will be used to encrypt the pdf document. 
            </summary>
        </member>
        <member name="T:PDFTech.NumberingStyle">
            <summary>
            Specifies the available styles when setting up a page numbering range. 
            </summary>
        </member>
        <member name="F:PDFTech.NumberingStyle.XofY">
            <summary>
            The numbering style uses X of Y
            </summary>
        </member>
        <member name="F:PDFTech.NumberingStyle.UpperCaseRoman">
            <summary>
            The numbering style uses uppercase roman numerals 
            </summary>
        </member>
        <member name="F:PDFTech.NumberingStyle.LowerCaseRoman">
            <summary>
            The numbering style uses lowercase roman numerals 
            </summary>
        </member>
        <member name="F:PDFTech.NumberingStyle.Regular">
            <summary>
            The numbering style uses regular numerals 
            </summary>
        </member>
        <member name="T:PDFTech.HatchType">
            <summary>
            Specifies the available types for hatch brushes. 
            </summary>
        </member>
        <member name="F:PDFTech.HatchType.Horizontal">
            <summary>
            A pattern of horizontal lines.
            </summary>
        </member>
        <member name="F:PDFTech.HatchType.Vertical">
            <summary>
            A pattern of vertical lines. 
            </summary>
        </member>
        <member name="F:PDFTech.HatchType.ForwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper left to lower right. 
            </summary>
        </member>
        <member name="F:PDFTech.HatchType.BackwardDiagonal">
            <summary>
            A pattern of lines on a diagonal from upper right to lower left. 
            </summary>
        </member>
        <member name="F:PDFTech.HatchType.Cross">
            <summary>
            Specifies horizontal and vertical lines that cross. 
            </summary>
        </member>
        <member name="F:PDFTech.HatchType.DiagonalCross">
            <summary>
            Specifies forward diagonal and backward diagonal lines that cross 
            </summary>
        </member>
        <member name="T:PDFTech.PDFSubmitType">
            <summary>
            Specifies the available data formats for submitting the form data. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFSubmitType.HTML">
            <summary>
            The field names and values are submitted in HTML Form format. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFSubmitType.FDF">
            <summary>
            The field names and values are submitted in FDF format. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFSubmitType.XFDF">
            <summary>
            The field names and values are submitted in XFDF format. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFSubmitType.PDF">
            <summary>
            The entire PDF file is submitted. 
            </summary>
        </member>
        <member name="T:PDFTech.NamedAction">
            <summary>
            Specifies the available named actions supported by the viewer. 
            </summary>
        </member>
        <member name="F:PDFTech.NamedAction.NextPage">
            <summary>
            Go to next page in the document. 
            </summary>
        </member>
        <member name="F:PDFTech.NamedAction.PrevPage">
            <summary>
            Go to previous page in the document. 
            </summary>
        </member>
        <member name="F:PDFTech.NamedAction.FirstPage">
            <summary>
            Go to first page in the document. 
            </summary>
        </member>
        <member name="F:PDFTech.NamedAction.LastPage">
            <summary>
            Go to last page in the document. 
            </summary>
        </member>
        <member name="T:PDFTech.ViewerPreference">
            <summary>
            Defines the viewer preferences for the document 
            </summary>
        </member>
        <member name="F:PDFTech.ViewerPreference.HideToolBar">
            <summary>
            Hide tool bar
            </summary>
        </member>
        <member name="F:PDFTech.ViewerPreference.HideMenuBar">
            <summary>
            Hide menu bar
            </summary>
        </member>
        <member name="F:PDFTech.ViewerPreference.HideWindowUI">
            <summary>
            Hide window UI
            </summary>
        </member>
        <member name="F:PDFTech.ViewerPreference.FitWindow">
            <summary>
            Fit window
            </summary>
        </member>
        <member name="F:PDFTech.ViewerPreference.CenterWindow">
            <summary>
            Center window
            </summary>
        </member>
        <member name="T:PDFTech.HorJust">
            <summary>
            Horizontal alignment
            </summary>
        </member>
        <member name="F:PDFTech.HorJust.Left">
            <summary>
            left alignment
            </summary>
        </member>
        <member name="F:PDFTech.HorJust.Center">
            <summary>
            Center alignment
            </summary>
        </member>
        <member name="F:PDFTech.HorJust.Right">
            <summary>
            Right alingment
            </summary>
        </member>
        <member name="T:PDFTech.VertJust">
            <summary>
            Vertical alignment
            </summary>
        </member>
        <member name="F:PDFTech.VertJust.Top">
            <summary>
            Top alignment
            </summary>
        </member>
        <member name="F:PDFTech.VertJust.Center">
            <summary>
            Center alignment
            </summary>
        </member>
        <member name="F:PDFTech.VertJust.Bottom">
            <summary>
            bottom alignment
            </summary>
        </member>
        <member name="T:PDFTech.TextAlign">
            <summary>
            Specifies text alignment
            </summary>
        </member>
        <member name="F:PDFTech.TextAlign.Center">
            <summary>
            Center alignment    
            </summary>
        </member>
        <member name="F:PDFTech.TextAlign.Justified">
            <summary>
            Justify alignment
            </summary>
        </member>
        <member name="F:PDFTech.TextAlign.Left">
            <summary>
            Left alignment
            </summary>
        </member>
        <member name="F:PDFTech.TextAlign.Right">
            <summary>
            right alignment
            </summary>
        </member>
        <member name="T:PDFTech.ImageCompressionType">
            <summary>
            Specifies image compression
            </summary>
        </member>
        <member name="F:PDFTech.ImageCompressionType.AutoSelect">
            <summary>
            
            </summary>
        </member>
        <member name="F:PDFTech.ImageCompressionType.Flate">
            <summary>
            Flate (Gzip) compression
            </summary>
        </member>
        <member name="F:PDFTech.ImageCompressionType.Jpeg">
            <summary>
            Jpeg compression
            </summary>
        </member>
        <member name="F:PDFTech.ImageCompressionType.CCITT3">
            <summary>
            CCITT3 fax compression
            </summary>
        </member>
        <member name="F:PDFTech.ImageCompressionType.CCITT32D">
            <summary>
            CCITT32D fax compression
            </summary>
        </member>
        <member name="F:PDFTech.ImageCompressionType.CCITT4">
            <summary>
            CCITT4 fax compression
            </summary>
        </member>
        <member name="T:PDFTech.MagnificationMode">
            <summary>
            Specifies the available magnification modes when a page is displayed. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.XYZ">
            <summary>
            Display the page with the coordinates (left, top) positioned at the top-left corner of the window and the contents of the page magnified by the factor zoom. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.Fit">
            <summary>
            Display the page with its contents magnified just enough to fit the entire page within the window both horizontally and vertically. If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the page within the window in the other dimension. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.FitH">
            <summary>
            Display the page with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of the page within the window. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.FitV">
            <summary>
            Display the page with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of the page within the window. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.FitR">
            <summary>
            Display the page with its contents magnified just enough to fit the rectangle specified by the coordinates left, bottom, right, and top entirely within the window both horizontally and vertically. If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the rectangle within the window in the other dimension. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.FitB">
            <summary>
            Display the page with its contents magnified just enough to fit its bounding box entirely within the window both horizontally and vertically. If the required horizontal and vertical magnification factors are different, use the smaller of the two, centering the bounding box within the window in the other dimension. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.FitBH">
            <summary>
            Display the page designated by page, with the vertical coordinate top positioned at the top edge of the window and the contents of the page magnified just enough to fit the entire width of its bounding box within the window. 
            </summary>
        </member>
        <member name="F:PDFTech.MagnificationMode.FitBV">
            <summary>
            Display the page designated by page, with the horizontal coordinate left positioned at the left edge of the window and the contents of the page magnified just enough to fit the entire height of its bounding box within the window. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFCryptoOptions">
            <summary>
            
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowPrinting">
            <summary>
            Allow printing
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowModifyContents">
            <summary>
            Allow modify contents
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowCopy">
            <summary>
            Allow copy
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowModifyAnnotations">
            <summary>
            Allow modify annotations
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowFillIn">
            <summary>
            Fill in existing interactive form fields
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowScreenReaders">
            <summary>
            Allow screen readers
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowAssembly">
            <summary>
            Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images)
            </summary>
        </member>
        <member name="F:PDFTech.PDFCryptoOptions.AllowDegradedPrinting">
            <summary>
            Allow degraded printing
            </summary>
        </member>
        <member name="T:PDFTech.PageLayout">
            <summary>
            Specifies the page layout to be used when the document is opened. 
            </summary>
        </member>
        <member name="F:PDFTech.PageLayout.SinglePage">
            <summary>
            Display one page at a time. 
            </summary>
        </member>
        <member name="F:PDFTech.PageLayout.OneColumn">
            <summary>
            Display the pages in one column. 
            </summary>
        </member>
        <member name="F:PDFTech.PageLayout.TwoColumnLeft">
            <summary>
            Display the pages in two columns, with odd numbered pages on the left.  
            </summary>
        </member>
        <member name="F:PDFTech.PageLayout.TwoColumnRight">
            <summary>
            Display the pages in two columns, with odd numbered pages on the right. 
            </summary>
        </member>
        <member name="T:PDFTech.PageMode">
            <summary>
            specifying how the document should be displayed when opened
            </summary>
        </member>
        <member name="F:PDFTech.PageMode.UseNone">
            <summary>
            Neither document outline nor thumbnail images visible
            </summary>
        </member>
        <member name="F:PDFTech.PageMode.UseOutlines">
            <summary>
            Document outline visible
            </summary>
        </member>
        <member name="F:PDFTech.PageMode.UseThumbs">
            <summary>
            Thumbnail images visible
            </summary>
        </member>
        <member name="F:PDFTech.PageMode.FullScreen">
            <summary>
            Full-screen mode, with no menu bar, window controls, or any other window visible
            </summary>
        </member>
        <member name="F:PDFTech.PageMode.UseAttachments">
            <summary>
            Attachments panel visible
            </summary>
        </member>
        <member name="F:PDFTech.PageMode.UseOC">
            <summary>
            Optional content group panel visible
            </summary>
        </member>
        <member name="T:PDFTech.LineEndingStyle">
            <summary>
            Specifies the available line ending styles to be used when drawing a line annotation. 
            </summary>
        </member>
        <member name="F:PDFTech.LineEndingStyle.Square">
            <summary>
            A square filled with annotation's interior color, if any. 
            </summary>
        </member>
        <member name="F:PDFTech.LineEndingStyle.Circle">
            <summary>
            A circle filled with annotation's interior color, if any. 
            </summary>
        </member>
        <member name="F:PDFTech.LineEndingStyle.Diamond">
            <summary>
            A diamond filled with annotation's interior color, if any. 
            </summary>
        </member>
        <member name="F:PDFTech.LineEndingStyle.OpenArrow">
            <summary>
            Two short lines meeting in an acute angle, forming a open arrow head.
            </summary>
        </member>
        <member name="F:PDFTech.LineEndingStyle.ClosedArrow">
            <summary>
            Two short lines meeting in an acute angle as in the OpenArrow style, connected by a third line to form a triangular closed arrowhead filled with annotation's interior color, if any. 
            </summary>
        </member>
        <member name="F:PDFTech.LineEndingStyle.None">
            <summary>
            No line ending. 
            </summary>
        </member>
        <member name="T:PDFTech.MarkupStyle">
            <summary>
            Specifies the available markup styles to be used when drawing a markup annotation.
            </summary>
        </member>
        <member name="F:PDFTech.MarkupStyle.Highlight">
            <summary>
            Highlight markup. 
            </summary>
        </member>
        <member name="F:PDFTech.MarkupStyle.Underline">
            <summary>
            Underline markup. 
            </summary>
        </member>
        <member name="F:PDFTech.MarkupStyle.Squiggly">
            <summary>
            Squiggly markup. 
            </summary>
        </member>
        <member name="F:PDFTech.MarkupStyle.StrikeOut">
            <summary>
            StrikeOut markup. 
            </summary>
        </member>
        <member name="T:PDFTech.FileAttachmentAnnotationIcon">
            <summary>
            Specifies the available icons for a file atachment annotation when the annotation is closed. 
            </summary>
        </member>
        <member name="F:PDFTech.FileAttachmentAnnotationIcon.Graph">
            <summary>
            Graph icon. 
            </summary>
        </member>
        <member name="F:PDFTech.FileAttachmentAnnotationIcon.Paperclip">
            <summary>
            Paper clip icon. 
            </summary>
        </member>
        <member name="F:PDFTech.FileAttachmentAnnotationIcon.PushPin">
            <summary>
            Push pin icon. 
            </summary>
        </member>
        <member name="F:PDFTech.FileAttachmentAnnotationIcon.Tag">
            <summary>
            Tag icon
            </summary>
        </member>
        <member name="T:PDFTech.BorderStyle">
            <summary>
            Specifies the available styles for an annotation's border. 
            </summary>
        </member>
        <member name="F:PDFTech.BorderStyle.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:PDFTech.BorderStyle.Solid">
            <summary>
            A solid rectangle surrounding the annotation.
            </summary>
        </member>
        <member name="F:PDFTech.BorderStyle.Dashed">
            <summary>
            A dashed rectangle surrounding the annotation. 
            </summary>
        </member>
        <member name="F:PDFTech.BorderStyle.Beveled">
            <summary>
            A simulated embossed rectangle that appears to be raised above the surface of the page. 
            </summary>
        </member>
        <member name="F:PDFTech.BorderStyle.Inset">
            <summary>
            A simulated engraved rectangle that appears to be recessed below the surface of the page. 
            </summary>
        </member>
        <member name="F:PDFTech.BorderStyle.Underline">
            <summary>
            A single line along the bottom of the annotation rectangle. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFPageSize">
            <summary>
            Specifies the standard paper sizes. 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.UserDefined">
            <summary>
            Custom paper
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Letter">
            <summary>
            Letter paper (8.5 in. by 11 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.A4">
            <summary>
            A4 paper (210 mm by 297 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.A3">
            <summary>
            A3 paper (297 mm by 420 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Legal">
            <summary>
            Legal paper (8.5 in. by 14 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.B5">
            <summary>
            B5 paper (176 mm by 250 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.C5">
            <summary>
            C5 envelope (162 mm by 229 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Eightx11">
            <summary>
            Standard paper (8 in. by 11 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.B4">
            <summary>
            B4 paper (250 mm by 353 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.A5">
            <summary>
            A5 paper (148 mm by 210 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Folio">
            <summary>
            Folio paper (8.5 in. by 13 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Executive">
            <summary>
            Executive paper (7.25 in. by 10.5 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.EnvB4">
            <summary>
            B4 envelope (250 mm by 353 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.EnvB5">
            <summary>
            B5 envelope (176 mm by 250 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.EnvC6">
            <summary>
            C6 envelope (114 mm by 162 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.EnvDL">
            <summary>
            DL envelope (110 mm by 220 mm). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.EnvMonarch">
            <summary>
            Monarch envelope (3.875 in. by 7.5 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Env9">
            <summary>
            #9 envelope (3.875 in. by 8.875 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Env10">
            <summary>
            #10 envelope (4.125 in. by 9.5 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.PDFPageSize.Env11">
            <summary>
            #11 envelope (4.5 in. by 10.375 in.). 
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.None">
            <summary>
            Specifies the available icons for a rubber stamp annotation when the annotation is closed. 
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBApproved">
            <summary>
            Standart business approved icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBConfidential">
            <summary>
            Standart business confidential icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBDraft">
            <summary>
            Standart business draft icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBFinal">
            <summary>
            Standart business final icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBForComment">
            <summary>
            Standart business for comment icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBForPublicRelease">
            <summary>
            Standart business for public release icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBNotApproved">
            <summary>
            Standart business not approved icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBNotForPublicRelease">
            <summary>
            Standart business not for public release icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBCompleted">
            <summary>
            Standart business completed icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBVoid">
            <summary>
            Standart business void icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBPreliminaryResults">
            <summary>
            Standart business preliminary results icon.
            </summary>
        </member>
        <member name="F:PDFTech.RubberStampAnnotationIcon.SBInformationOnly">
            <summary>
            Standart business information only icon.
            </summary>
        </member>
        <member name="T:PDFTech.TextAnnotationIcon">
            <summary>
            Specifies the available icons for a text annotation when the annotation is closed. 
            </summary>
        </member>
        <member name="F:PDFTech.TextAnnotationIcon.Comment">
            <summary>
            Comment icon
            </summary>
        </member>
        <member name="F:PDFTech.TextAnnotationIcon.Key">
            <summary>
            Key icon
            </summary>
        </member>
        <member name="F:PDFTech.TextAnnotationIcon.Note">
            <summary>
            Note icon
            </summary>
        </member>
        <member name="F:PDFTech.TextAnnotationIcon.Help">
            <summary>
            Help icon
            </summary>
        </member>
        <member name="F:PDFTech.TextAnnotationIcon.NewParagraph">
            <summary>
            New paragraph icon
            </summary>
        </member>
        <member name="F:PDFTech.TextAnnotationIcon.Paragraph">
            <summary>
            Paragraph icon
            </summary>
        </member>
        <member name="F:PDFTech.TextAnnotationIcon.Insert">
            <summary>
            Insert icon
            </summary>
        </member>
        <member name="T:PDFTech.Charset">
            <summary>
            Specifies the character set of a font. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.ANSI_CHARSET">
            <summary>
            Specifies the ANSI character set.
            </summary>
        </member>
        <member name="F:PDFTech.Charset.DEFAULT_CHARSET">
            <summary>
            Specifies a default character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.SYMBOL_CHARSET">
            <summary>
            Specifies the Symbol character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.OEM_CHARSET">
            <summary>
            Specifies the OEM character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.HEBREW_CHARSET">
            <summary>
            Specifies the Hebrew character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.ARABIC_CHARSET">
            <summary>
            Specifies the Arabic character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.GREEK_CHARSET">
            <summary>
            Specifies the Greek character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.TURKISH_CHARSET">
            <summary>
            Specifies the Turkish character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.EASTEUROPE_CHARSET">
            <summary>
            Specifies the EastEurope character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.RUSSIAN_CHARSET">
            <summary>
            Specifies the Russian character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.MAC_CHARSET">
            <summary>
            Specifies the Macintosh character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.BALTIC_CHARSET">
            <summary>
            Specifies the Baltic character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.VIETNAMESE_CHARSET">
            <summary>
            Specifies the Vietnamese character set. 
            </summary>
        </member>
        <member name="F:PDFTech.Charset.Unicode">
            <summary>
            Specifies the Unicode encoding. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFFileAttachmentAnnotation">
            <summary>
            A file attachment annotation contains a reference to a file, which typically is embedded in the PDF file
            </summary>
        </member>
        <member name="P:PDFTech.PDFFileAttachmentAnnotation.Compress">
            <summary>
            Gets or sets whether the embedded file should be compressed. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFFileAttachmentAnnotation.File">
            <summary>
            Gets or sets the file associated with this annotation.
            </summary>
        </member>
        <member name="P:PDFTech.PDFFileAttachmentAnnotation.Icon">
            <summary>
            Gets or sets the annotation's icon. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFPattern">
            <summary>
            Represents repeating graphical figure or a smoothly varying color gradient
            </summary>
        </member>
        <member name="T:HtmlConverter.HtmlConverter">
            <summary>
            Class which allows converting Html to the Image.
            </summary>
        </member>
        <member name="T:HtmlConverter.IDocHostUIHandler">
            <summary>
            System interface.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.ShowContextMenu(System.UInt32,mshtml.tagPOINT@,System.Object,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.GetHostInfo(HtmlConverter.DOCHOSTUIINFO@)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.ShowUI(System.UInt32,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.HideUI">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.UpdateUI">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.EnableModeless(System.Int32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.OnDocWindowActivate(System.Int32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.OnFrameWindowActivate(System.Int32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.ResizeBorder(mshtml.tagRECT@,System.IntPtr,System.Int32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.TranslateAccelerator(HtmlConverter.tagMSG@,System.Guid@,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.GetOptionKeyPath(System.String@,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.GetDropTarget(System.IntPtr,System.IntPtr@)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.GetExternal(System.Object@)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.TranslateUrl(System.UInt32,System.UInt16@,System.IntPtr)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IDocHostUIHandler.FilterDataObject(System.Windows.Forms.IDataObject,System.Windows.Forms.IDataObject@)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="T:HtmlConverter.IOleClientSite">
            <summary>
            System interface.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleClientSite.SaveObject">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleClientSite.GetMoniker(System.UInt32,System.UInt32,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleClientSite.GetContainer(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleClientSite.ShowObject">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleClientSite.OnShowWindow(System.Boolean)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleClientSite.RequestNewObjectLayout">
            <summary>
            System method.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.DEF_OFFSET">
            <summary>
            Offset to the width/height.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.DEF_TIMEOUT">
            <summary>
            Timeout of the thread while document is lodaing.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.DEF_BLANK">
            <summary>
            Blank page.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.DISPID_AMBIENT_DLCONTROL">
            <summary>
            IDispatch:: Invoke params.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.DEF_META_EXEC_PARAMS">
            <summary>
            Metafile Execute parameters.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.m_DocComplete">
            <summary>
            Indicates whether loading of the document is completed.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.m_url">
            <summary>
            Url to the Html resource.
            </summary>
        </member>
        <member name="F:HtmlConverter.HtmlConverter.m_bCancelNavigate">
            <summary>
            Indicates whether we should stop navigation.
            </summary>
        </member>
        <member name="M:HtmlConverter.HtmlConverter.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Creates new object.
            </summary>
        </member>
        <member name="M:HtmlConverter.HtmlConverter.Dispose(System.Boolean)">
            <summary>
            Disposes component.
            </summary>
            <param name="disposing">Indicates whether dispose managed resources or not.</param>
        </member>
        <member name="T:HtmlConverter.HtmlConverter.BrowserNavConstants">
            <summary>
            Loading flags
            </summary>
        </member>
        <member name="T:HtmlConverter.Native">
            <summary>
            Contains native function declarations.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.PRF_CHECKVISIBLE">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.PRF_CHILDREN">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.PRF_CLIENT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.PRF_ERASEBKGND">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.PRF_NONCLIENT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.PRF_OWNED">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.PW_CLIENTONLY">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.WM_PRINT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.WM_PRINTCLIENT">
            <summary>
            Windows message.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.S_OK">
            <summary>
            HRESULT S_OK constant.
            </summary>
        </member>
        <member name="F:HtmlConverter.Native.S_FALSE">
            <summary>
            HRESULT S_OK constant.
            </summary>
        </member>
        <member name="M:HtmlConverter.Native.#ctor">
            <summary>
            Creates new object.
            </summary>
        </member>
        <member name="T:HtmlConverter.DOCHOSTUITYPE">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:HtmlConverter.DOCHOSTUIDBLCLK">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:HtmlConverter.DOCHOSTUIFLAG">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:HtmlConverter.INVOKE_PARAMS">
            <summary>
            System enum.
            </summary>
        </member>
        <member name="T:HtmlConverter.DOCHOSTUIINFO">
            <summary>
            System struct.
            </summary>
        </member>
        <member name="T:HtmlConverter.tagMSG">
            <summary>
            System struct.
            </summary>
        </member>
        <member name="T:HtmlConverter.ICustomDoc">
            <summary>
            System interface.
            </summary>
        </member>
        <member name="M:HtmlConverter.ICustomDoc.SetUIHandler(HtmlConverter.IDocHostUIHandler@)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="T:HtmlConverter.IOleObject">
            <summary>
            System interface.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.SetClientSite(HtmlConverter.IOleClientSite)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.GetClientSite(HtmlConverter.IOleClientSite)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.SetHostNames(System.Object,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.Close(System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.SetMoniker(System.UInt32,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.GetMoniker(System.UInt32,System.UInt32,System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.InitFromData(System.Windows.Forms.IDataObject,System.Boolean,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.GetClipboardData(System.UInt32,System.Windows.Forms.IDataObject)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.DoVerb(System.UInt32,System.UInt32,System.Object,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.EnumVerbs(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.Update">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.IsUpToDate">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.GetUserClassID(System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.GetUserType(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.SetExtent(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.GetExtent(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.Advise(System.Object,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.Unadvise(System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.EnumAdvise(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.GetMiscStatus(System.UInt32,System.UInt32)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="M:HtmlConverter.IOleObject.SetColorScheme(System.Object)">
            <summary>
            System method.
            </summary>
        </member>
        <member name="T:PDFTech.ImageMask">
            <summary>
            Defines a base class for all image masks. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFColorImageMask">
            <summary>
            Defines a color-key mask for an image. 
            </summary>
            <remarks><b>Note:</b> A color image mask should not be used with jpeg images because they use a lossy image compression and unwanted effects might appear. </remarks>
        </member>
        <member name="P:PDFTech.PDFColorImageMask.BeginColor">
            <summary>
            Gets or sets the begin color for image mask.  
            </summary>
        </member>
        <member name="P:PDFTech.PDFColorImageMask.EndColor">
            <summary>
            Gets or sets the end color for image mask. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFImageMask">
            <summary>
            Defines an image based mask for an image. 
            </summary>
            <remarks>
            An image based mask allows to specify a monochrome bitmap that defines what regions of the base image will be painted or not on the page. 
            </remarks>
        </member>
        <member name="M:PDFTech.PDFImageMask.AddImage(PDFTech.PDFImage)">
            <summary>
            Adds the specified <see cref="T:PDFTech.PDFImage">PDFImage</see> to the image mask. 
            </summary>
            <param name="Image">The PDFImage object to add to the PDFImageMask object. </param>
        </member>
        <member name="P:PDFTech.PDFImageMask.Image">
            <summary>
            Gets the image object representing mask.
            </summary>
        </member>
        <member name="T:PDFTech.PDFAlphaChannelMask">
            <summary>
            Defines an image based mask for an image.
            </summary>
            <remarks>
            An alpha channel mask allows to specify a grayscale bitmap that defines the alpha channel values for the image. Only grayscale images are allowed as alpha channel masks. 
            </remarks>
        </member>
        <member name="M:PDFTech.PDFOperation.IsContainingPDFALabel">
            <summary>
            This function checks to see if the PDF file has the PDF/A flag set.
            </summary>        
            <returns>Returns TRUE if the PDF/A flag is set.</returns>
        </member>
        <member name="M:PDFTech.PDFOperation.ExtractText(System.Int32,System.Int32,PDFTech.LayoutType,PDFTech.EncodingType,System.Boolean,System.Boolean,System.Boolean,System.String)">
             <summary>
             The function extract text from a PDF Document.
             </summary>        
             <param name="beginPage">Beginning page </param>
             <param name="EndPage">Ending page </param>
             <param name="layType">Text layout type.</param>
             <param name="encodingType">Encoding for the resulting text file.</param>        
             <param name="generateMeta">Flag that specifies the generation of HTML meta.</param>
             <param name="pageBreaks">Flag that specify the use of page breaks. </param>
             <param name="ExtractImages">Set this value to TRUE if you wich to extract images from the PDF document.</param>
             <param name="textFileName">Full path of the resluting PDF document. </param>        
             <returns>Returns TRUE if function is successful</returns>  
             <example>
             The code sample below demonstates how the text is extracted out of a PDF document.
             <code>
            using System;
            using PDFTech;
            namespace ExtractText
            {
                class Program
                {
                    static void Main(string[] args)
                    {
                        PDFOperation operation = new PDFOperation("C:\\sample.pdf", "");
                        string Error = "";
                        int pageCount = operation.GetPageCount(out Error);
                        if (Error == "")
                        {
                            if (!operation.ExtractText(0, pageCount, LayoutType.Flowing, EncodingType.UTF8, false,
                                 true, false, "C:\\sample.txt"))
                                Console.WriteLine(Error);
                        }
                        else
                        {
                            Console.WriteLine(Error);
                        }
                    }
                }
            }
             </code>
             </example>
        </member>
        <member name="T:PDFTech.PDFLineAnnotation">
            <summary>
            A line annotation displays a single straight line on the page.
            </summary>
            <remarks>
            When opened, it displays a pop-up window containing the text of the associated note.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFLineAnnotation.BorderStyle">
            <summary>
            Gets or sets annotation border style.
            </summary>
        </member>
        <member name="P:PDFTech.PDFLineAnnotation.BorderWidth">
            <summary>
            Gets or set annotation border width
            </summary>
        </member>
        <member name="P:PDFTech.PDFLineAnnotation.BeginLineStyle">
            <summary>
            Gets or sets the style used for the beginning of the line. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFLineAnnotation.EndLineStyle">
            <summary>
            Gets or sets the style used for the end of the line. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFLineAnnotation.InteriorColor">
            <summary>
            the interior color with which to fill the annotation’s line endings.
            </summary>
        </member>
        <member name="T:PDFTech.PDFMarkupAnnotation">
            <summary>
            Text markup annotations appear as highlights, underlines, strikeout, or jagged (“squiggly”) underlines in the text of a document.
            </summary>
            <remarks>
            When opened, they display a pop-up window containing the text of the associated note.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFMarkupAnnotation.MarkupStyle">
            <summary>
            Gets or sets the markup style for the markup annotation.
            </summary>
        </member>
        <member name="P:PDFTech.PDFMarkupAnnotation.QuadPoints">
             <summary>
             Gets or sets the points the define the markup annotation.  
             </summary>
             <remarks>
             The QuadPoints array must contain 8*n elements specifying the coordinates of n quadrilaterals. Each quadrilateral encompasses a word or group of continuous words in the text underlying the annotation. The coordinates for each quadrilateral are given in the order
            x1 y1 x2 y2 x3 y3 x4 y4
            specifying the quadrilateral's four vertices in counterclockwise order. The text is oriented with respect to the edge connecting points (x1,y1) and (x2,y2). 
             </remarks>
        </member>
        <member name="T:PDFTech.PDFAConverter">
            <summary>
            The PDFAConverter class is used to verify the compliance of PDF documents to the PDF/a standard. It can also create PDF/A documents or attempt to convert document that do not comply.
            </summary>
            <remarks>
            PDF/A standard is defined by the International Organization for Standardization (ISO). 
            PDF/A standard apply to long-term archiving of electronic documents. During PDF conversion, 
            the file that is being processed is checked against the PDF/A standard. If the PDF does not meet the PDF/A 
            ISO standard, you are able to either cancel the conversion or create a non-compliant file.
            </remarks>
        </member>
        <member name="M:PDFTech.PDFAConverter.#ctor(System.String)">
            <summary>
            Creates new PDFAConverter class
            </summary>
            <param name="inputFileName">Shows the input location of the PDF file.</param>
        </member>
        <member name="M:PDFTech.PDFAConverter.isPDFA(System.Boolean@)">
             <summary>
             This function checks a PDF document to verify compliance with the PDF/A standard.
             </summary>
             <param name="IsConvertable">Returns a value that indicates whether the current document is convertible to PDF/A.
            </param>
             <returns>It returns TRUE if the document is PDF/A compliant. Returns FALSE otherwise.
            </returns>
             <example>
             The example below shows how a PDF document can be converted to a PDF/A document. 
             <code>
              PDFAConverter converter = new PDFAConverter("sample.pdf");
              bool isconvertable = false;
              if (!converter.isPDFA(ref isconvertable))
              {
                  if (converter.Error == "")
                  {
                      foreach (PDFAError error in converter.PDFAErrorList)
                      {
                          Console.WriteLine(error.Code + "\t" + error.Error + "\t" + error.Count.ToString() + " matches");
                      }
                  }
                  else
                  {
                      Console.WriteLine(converter.Error);
                      return;
                  }
              }
              if (isconvertable)
              {
                  Console.WriteLine();
                  Console.WriteLine("sample.pdf is convertable to PDF/A. Please use ConvertPDFA() method.");
              }
             </code>
             </example>
        </member>
        <member name="M:PDFTech.PDFAConverter.ConvertPDFA(System.String)">
            <summary>
            This function converts a PDF document to PDF/A. 
            </summary>
            <param name="outputFile"></param>
            <returns>Returns TRUE if the created document is PDF/A compliant returns FALSE otherwise.</returns>
            <example>
            The example below shows how a PDF document is converted to a PDF/A document.
            <code>
             PDFAConverter converter = new PDFAConverter("sample.pdf");
             bool success = converter.ConvertPDFA("sample-A.pdf");
             if (converter.Error == "")
             {
                 if (success)
                 {
                     foreach (PDFAError error in converter.PDFAErrorList)
                     {
                         Console.WriteLine(error.Code + "\t" + error.Error + "\t" + error.Count.ToString() + " matches");
                     }
                     Console.WriteLine();
                     Console.WriteLine("sample.pdf successfully converted to PDF/A.");
                 }
                 else
                 {
                     foreach (PDFAError error in converter.PDFAErrorList)
                     {
                         if (error.IsConvertable == false)
                             Console.WriteLine(error.Code + "\t" + error.Error + "\t" + error.Count.ToString() + " matches");
                     }
                     Console.WriteLine();
                     Console.WriteLine("sample.pdf can not convertable to PDF/A. Created a non-compliant file.");
                 }
             }
             else
             {
                 Console.WriteLine(converter.Error);
                 return;
             }
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFAConverter.Abort">
            <summary>
            This procedure will clear all internal data and break generation of the PDF document.
            </summary>
        </member>
        <member name="P:PDFTech.PDFAConverter.FastMode">
            <summary>
            In FastMode the attempt to convert non-compliant documents are aborted when the first non-convertible property is encountered. No further checks are performed for the sake of speed.
            </summary>
        </member>
        <member name="P:PDFTech.PDFAConverter.PDFAErrorList">
            <summary>
            Returns all PDF/A errors encountered in the document.
            </summary>
        </member>
        <member name="E:PDFTech.PDFAConverter.Progress">
            <summary>
            Gets or sets the method to be executed when this event is raised. 
            </summary>
            <remarks>
            This event returns the state of the PDF Document creation process.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFAConverter.Error">
            <summary>
            Returns possible error messages.
            </summary>
        </member>
        <member name="T:PDFTech.PDFAErrorList">
            <summary>
            Provides object-model access to all PDFA errors. This class cannot be inherited. 
            </summary>
        </member>
        <member name="M:PDFTech.PDFAErrorList.Clear">
            <summary>
            Removes all elements from the PDFAErrorList. 
            </summary>
        </member>
        <member name="M:PDFTech.PDFAErrorList.IndexOf(PDFTech.PDFAError)">
            <summary>
            Returns the index of the specified PDFAError object within the collection. 
            </summary>
            <param name="error">The PDFAError to locate within the collection.</param>
            <returns>The zero-based index of the first occurrence of PDFAError within the collection; otherwise, -1 if the style is not in the collection. </returns>
        </member>
        <member name="M:PDFTech.PDFAErrorList.Delete(PDFTech.PDFAError)">
            <summary>
            Deletes specified PDFAError from the PDFAErrorList.
            </summary>
            <param name="error">PDFAError to delete.</param>
        </member>
        <member name="M:PDFTech.PDFAErrorList.MoveNext">
            <summary>
            Advances the enumerator to the next PDFAError. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFAErrorList.Reset">
            <summary>
            Resets the current enumerator to point to the head of the queue. 
            </summary>
        </member>
        <member name="M:PDFTech.PDFAErrorList.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the PDFAErrorList. 
            </summary>
            <returns>An enumerator that can iterate through the PDFAErrorList. </returns>
        </member>
        <member name="P:PDFTech.PDFAErrorList.Count">
            <summary>
            Gets the number of PDFAErrors in the PDFAErrorList.
            </summary>
        </member>
        <member name="P:PDFTech.PDFAErrorList.Item(System.Int32)">
            <summary>
            Gets a specific PDFAError class using an index value. 
            </summary>
            <param name="Index">An index value of the PDFAError to retrieve.</param>
            <returns>A PDFAError structure at the index value. </returns>
        </member>
        <member name="P:PDFTech.PDFAErrorList.Current">
            <summary>
            Gets the current PDFAError class in the queue.
            </summary>
        </member>
        <member name="T:PDFTech.PDFAError">
            <summary>
            Manipulates PDFA error information. This class cannot be inherited. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFAError.Code">
            <summary>
            Gets the error code of the PDFAError. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFAError.Error">
            <summary>
            Gets the error message of the PDFAError. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFAError.Type">
            <summary>
            Gets the type of the PDFAError. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFAError.Count">
            <summary>
            Gets the error count of the PDFAError. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFAError.IsConvertable">
            <summary>
            Use the IsConvertable property to determine if conversion is possible.
            </summary>
        </member>
        <member name="P:PDFTech.PDFAcroForm.RadioGroups">
            <summary>
            Retrieves the <see cref="T:PDFTech.PDFRadioGroup">PDFRadioGroup</see> collection used in the document.
            </summary>      
        </member>
        <member name="P:PDFTech.PDFAcroForm.FlattenFormFields">
            <summary>
            Checks to see if the Acro Form controls are editable
            </summary>
            <value>If TRUE it flattens the form controls. </value>
        </member>
        <member name="T:PDFTech.PDFActionAnnotation">
            <summary>
            PDFActionAnnotation is used to create annotations in PDF Documents.
            </summary>
            <remarks>
            a user clicks on an annotation in a PDF document it will execute the action linked to this annotation.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFActionAnnotation.Action">
            <summary>
            Action executed after click on annotation.
            </summary>
        </member>
        <member name="T:PDFTech.PDFButton">
            <summary>
            PDFButton creates a button in a PDF document.
            </summary>
            <remarks>A button represents an interactive control on the screen that the user can manipulate with the mouse.</remarks>
        </member>
        <member name="T:PDFTech.PDFControl">
            <summary>
            PDFControl is the base class for all interactive elements such as buttons, checkboxes, radiobuttons, comboboxes and edit fields.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.ReadOnly">
            <summary>
            If property is set to true, the user may not change the value of the field.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.Required">
            <summary>
            If set, the control must have a value at the time it is exported by a submit-form action
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.Name">
            <summary>
            Name of field used for export when the PDF document submitted.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.Color">
            <summary>
            Specifies the background color of the control.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.Font">
            <summary>
            Controls the attributes of text written on or in the control.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.Hint">
            <summary>
            Contains the text string that can appear when the user moves the mouse over the control.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.OnMouseUp">
            <summary>
            An action to be performed when the mouse button is released inside the PDF control's active area.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.OnMouseDown">
            <summary>
            An action to be performed when the mouse button is pressed inside the PDF control's active area.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.OnMouseEnter">
            <summary>
            An action to be performed when the cursor enters the PDF control's active area.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.OnMouseExit">
            <summary>
            An action to be performed when the cursor exits the PDF control's active area.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.OnSetFocus">
            <summary>
            An action to be performed when the PDF control receives the input focus.
            </summary>
        </member>
        <member name="P:PDFTech.PDFControl.OnLostFocus">
            <summary>
            An action to be performed when the PDF control is "blurred" (loses the input focus).
            </summary>
        </member>
        <member name="P:PDFTech.PDFButton.Caption">
            <summary>
            Specifies a text string that identifies the control to the user.
            </summary>
        </member>
        <member name="T:PDFTech.PDFCheckBox">
            <summary>
            PDFCheckBox is similar to <see cref="T:System.Windows.Forms.CheckBox">CheckBox</see> (checkbox toggles between two states, on and off) and creates a checkbox in a PDF Document.
            </summary>
        </member>
        <member name="T:PDFTech.PDFInputControl">
            <summary>
            PDFInputControl is the base class of all PDFControls where a user can input / change data.
            </summary>
        </member>
        <member name="M:PDFTech.PDFInputControl.SetAction_OnKeyPress(System.String)">
            <summary>
            A JavaScript action to be performed when the user types a keystroke into a text or combo box or modifies the selection in a scrollable list.
            </summary>
            <remarks>
            This allows the keystroke to be checked for validity and rejected or modified.
            </remarks>
        </member>
        <member name="M:PDFTech.PDFInputControl.SetAction_OnBeforeFormatting(System.String)">
            <summary>
            A JavaScript action to be performed before the field is formatted to display its current value. This allows the field's value to be modified before formatting.
            </summary>
        </member>
        <member name="M:PDFTech.PDFInputControl.SetAction_OnChange(System.String)">
            <summary>
            A JavaScript action to be performed when the field's value is changed. This allows the new value to be checked for validity.
            </summary>
        </member>
        <member name="M:PDFTech.PDFInputControl.SetAction_OnOtherControlChanged(System.String)">
            <summary>
            A JavaScript action to be performed when the value of another field changes, in order to recalculate the value of this field.
            </summary>
        </member>
        <member name="P:PDFTech.PDFCheckBox.Checked">
            <summary>
            Start state of checkbox.
            </summary>
        </member>
        <member name="P:PDFTech.PDFCheckBox.Caption">
            <summary>
            Specifies a text string that identifies the control to the user.
            </summary>
        </member>
        <member name="T:PDFTech.PDFComboBox">
            <summary>
            PDFComboBox creates a ComboBox in a PDF Document.
            </summary>
            <remarks>A combo box consisting of a dropdown list optionally accompanied by an editable text box in which the user can type a value other than the predefined choices.</remarks>
        </member>
        <member name="T:PDFTech.PDFList">
            <summary>
            Defines a scrollable list box field for user input in the PDF file. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFList.Items">
            <summary>
            Gets the collection of items in the list.
            </summary>
        </member>
        <member name="P:PDFTech.PDFList.SelectedIndex">
            <summary>
            Gets or sets the lowest ordinal index of the selected items in the list. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFList.SelectedItem">
            <summary>
            Gets or sets the first selected item in the list. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFList.SelectedValue">
            <summary>
            Gets or sets the value of the first selected item in the list. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFComboBox.EditEnabled">
            <summary>
            If property is set to true, the combo box includes an editable text box as well as a dropdown list; if false, it includes only a dropdown list. 
            </summary>
        </member>
        <member name="P:PDFTech.Viewer.ViewerPreferences">
            <summary>
            This property controls how the document is presented on the screen.
            </summary>
        </member>
        <member name="P:PDFTech.Viewer.PageMode">
            <summary>
            How the document should be displayed when opened.
            </summary>
        </member>
        <member name="P:PDFTech.Viewer.PageLayout">
            <summary>
            The page layout to be used when the document is opened.
            </summary>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.DefaultCharset">
            <summary>
            Gets ort sets the default character set of the document. The defualt value is the ANSI encoding.
            </summary>
            <seealso cref="T:PDFTech.Charset"/>
            <seealso cref="P:System.Text.Encoding.Default"/>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.TemplateFileName">
            <summary>
            Gets or sets the template file name for document's pages. 
            </summary>        
        </member>
        <member name="P:PDFTech.PDFCreationOptions.FontEmulationEnabled">
            <summary>
            When set to TRUE you may emulate the bold, italic and underline styles of a font. The defualt value is true.
            </summary>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.EncryptionKeySize">
            <summary>
            Gets or sets the length of the encryption key. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.ProtectionOptions">
            <summary>
            A set of flags specifying which operations are permitted when the document is opened with the user password.
            </summary>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.OwnerPassword">
            <summary>
            Owner's password for current PDF document.
            </summary>
            <remarks>
            The password is required to edit an encrypted PDF file.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.UserPassword">
            <summary>
            User password for current PDF document.
            </summary>
            <remarks>This is the password which will be used to encrypt the file.</remarks>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.UnitOfMeasure">
            <summary>
            Sets the UnitOfMeasure for the drawing operations. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFCreationOptions.ComplianceStandard">
            <summary>
            Gets or sets this documents compliance standarts.
            </summary>
            <remarks>
            If you prefer your documents PDF/A competible please select PDFStandarts.PDFA1b
            </remarks>
        </member>
        <member name="P:PDFTech.PDFDigitalSignature.Caption">
            <summary>
            Gets or sets annotation caption
            </summary>
        </member>
        <member name="P:PDFTech.PDFDigitalSignature.Text">
            <summary>
            Gets or sets annotation Text
            </summary>
        </member>
        <member name="T:PDFTech.ProgressEventHandler">
            <summary>
            Delegate used in the case of raising <see cref="E:PDFTech.PDFDocument.Progress">Progress</see> event.     
            </summary>
            <seealso cref="T:PDFTech.ProgressEventArgs"/>
            <seealso cref="E:PDFTech.PDFDocument.Progress"/>   
            <param name="sender">The source of the event.</param>
            <param name="arg">A <see cref="T:PDFTech.ProgressEventArgs">ProgressEventArgs</see> that contains event data. </param>
        </member>
        <member name="T:PDFTech.PDFDocument">
            <summary>
            The PDFDocument component is used to create PDF files.  
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.ImportXml(System.String,System.String,System.String)">
            <summary>
            Function used to convert XML files to PDF.        
            </summary>
            <param name="xmlFile">Location of XML file</param>
            <param name="xslFile">Location of XSL file</param>
            <param name="WorkingPath">Location of where the temporary files will be created.</param>
            <remarks>XMLToPDF function is use to convert XML files to PDF       
            You may specify the style information by supplying and XSL dile.
            </remarks>
            <example>
            The code sample below shows how you may easily convert an XML file to a PDF file.
            <code>
            PDFDocument doc = new PDFDocument("c:\sample.pdf");                  
            doc.XmlToPDF("c:\sample.xml", "c:\sample.xsl", "c:\temp");
            doc.Save();
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFDocument.ImportHTML(System.String)">
            <summary>
            The function to convert HTML files to PDF
            </summary>       
            <param name="URL">Location of the HTML file </param>
            <remarks>
            HTMLToPDF function is the easiest way to convert HTML files to PDF
            This function supports the following file extensions:        
            "html","htm","mht","txt". You may also specify a URL on your intranet or a web URL.
            </remarks>
            <example>
            The code sample below shows how easy it is to use this function to convert HTML to PDF using the HTMLToPDF function.
            <code>
            PDFDocument doc = new PDFDocument("c:\sample.pdf");                   
            doc.HTMLToPDF("http://www.w3.org/");
            doc.Save();
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFDocument.AddAttachment(System.String)">
            <summary>
            The function to use if you wish to attach a document to an existing pDF file.
            </summary>
            <param name="fileName"> Location of the attachment file</param>
            <returns><see cref="T:PDFTech.PDFAttachment">PdfAttachment</see> represent the embedded pDF document.</returns>
            <remarks> Any type of document may be embedded into a PDF document.</remarks>
            <example>
            The sample code below demonstrates how to attach a file into a PDF document.
            <code>
             PDFDocument doc = new PDFDocument("sample.pdf");           
             doc.AddAttachment("C:\\sample.doc");       
             ... 
             doc.Save();
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFDocument.AddSchema">
            <summary>
            Add a new Meta data schema to the document.
            </summary>   
            <returns><see cref="T:PDFTech.PDFMetaDataSchema">PdfMetaDataSchema</see> represents the PDF Meta Data Schema.</returns>
            <example>
            The sample below demonstrates how custom property values may be set for a given PDF document.
            <code>
            PDFDocument doc = new PDFDocument("sample.pdf");
            PdfMetaDataSchema schema = doc.AddSchema();
            schema.StoreSchemaInDocInfo = true;
            schema.Properties.Add("Customer", "Joe Doe");
            schema.Properties.Add("Company", "Acme Corp.");               
            ...
            doc.Save();
            </code>        
            </example>
            <remarks>
            Metadata schemas are used add custom properties to a document. These properties may be grouped into schemas and more than one schema can be used.
            </remarks>               
        </member>
        <member name="M:PDFTech.PDFDocument.AddSignature(System.String,System.Security.Cryptography.X509Certificates.StoreName,PDFTech.PDFPage,System.Drawing.RectangleF)">
            <summary>
            This function adds a digital signature to the document        
            </summary>
            <param name="signerName"></param>
            <param name="stName"></param>
            <param name="page"></param>
            <param name="box"></param>
            <returns></returns>
            <example>
            This sample shows how to sign a PDF file using X.509 certificates.
            <code>
             PDFDocument doc = new PDFDocument("sample.pdf");                
             PDFDigitalSignature sig = new PDFCertificate("MessageSigner",
                 System.Security.Cryptography.X509Certificates.StoreName.My, doc.CurrentPage, new System.Drawing.RectangleF(10,10,35,35));        
             sig.Location = "NY";            
             sig.Reason = "For demo";
             sig.ContactInfo = "support@pdf-technologies.com";            
             doc.Save();
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFDocument.AddSignature(System.Security.Cryptography.X509Certificates.X509Certificate2,PDFTech.PDFPage,System.Drawing.RectangleF)">
            <summary>
            This function adds a digital signature to the document        
            </summary>
            <param name="cert"></param>        
            <param name="page"></param>
            <param name="box"></param>
            <returns></returns>
            <example>
            This sample shows how to sign a PDF file using X.509 certificates.
            <code>
             PDFDocument doc = new PDFDocument("sample.pdf");                
             PDFDigitalSignature sig = new PDFCertificate("MessageSigner",
                 System.Security.Cryptography.X509Certificates.StoreName.My, doc.CurrentPage, new System.Drawing.RectangleF(10,10,35,35));        
             sig.Location = "NY";            
             sig.Reason = "For demo";
             sig.ContactInfo = "support@pdf-technologies.com";            
             doc.Save();
            </code>
            </example>
        </member>
        <member name="F:PDFTech.PDFDocument.License">
            <summary>
            License number. Set to empty if you are using it in the evaluation mode.
            </summary>
        </member>
        <member name="F:PDFTech.PDFDocument.ApplicationName">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.#ctor(System.String)">
            <summary>
            Creates a new PDFDocument class
            </summary>   
            <param name="fileName">Shows the output location of the PDF file.</param>
        </member>
        <member name="M:PDFTech.PDFDocument.#ctor(System.String,PDFTech.PDFCreationOptions)">
            <summary>
            Creates a new PDFDocument class
            </summary>   
            <param name="fileName">Shows the output location of the PDF file.</param>
            <param name="options">Creation options</param>
        </member>
        <member name="M:PDFTech.PDFDocument.Abort">
            <summary>
            This procedure will clear all internal data and break generation of the PDF document.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.Save">
            <summary>
            Generate the PDF document.
            </summary>
            <returns>Returns TRUE document is successfully created. </returns>
        </member>
        <member name="M:PDFTech.PDFDocument.NewPage">
            <summary>
            Creates a new page in the PDF document and sets CurrentPage property to new generated page.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.NewPage(PDFTech.PageSetup)">
            <summary>
            Creates a new page in the PDF document and sets CurrentPage property to new generated page.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.InsertPage(System.Int32)">
            <summary>
            Create ant inserts a PDFPage into the Pages at the specified index.
            </summary>
            <param name="Index">The zero-based index at which value should be inserted.</param>
        </member>
        <member name="M:PDFTech.PDFDocument.SetCurrentPage(System.Int32)">
            <summary>
            This function sets CurrentPage to page with number "Index".
            </summary>
            <param name="Index"></param>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePDFImportDataAction(System.String)">
            <summary>
            
            </summary>
            <param name="FileName"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePDFJavaScriptAction(System.String)">
            <summary>
            
            </summary>
            <param name="JavaScript"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePdfLaunchAction(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="File"></param>
            <param name="NewWindow"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePdfNamedAction(PDFTech.NamedAction)">
            <summary>
            
            </summary>
            <param name="NamedAction"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePdfRemoteGoToAction(System.String,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="File"></param>
            <param name="NewWindow"></param>
            <param name="TopOffset"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePDFResetFormAction">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePDFSubmitFormAction(System.String,PDFTech.PDFSubmitType)">
            <summary>
            
            </summary>
            <param name="URL"></param>
            <param name="SubmitType"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePDFURLAction(System.String)">
            <summary>
            
            </summary>
            <param name="URL"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.CreatePDFVisibleControlAction(System.Boolean)">
            <summary>
            
            </summary>
            <param name="Visible"></param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.PDFDocument.AddNumberingRange(System.Int32,System.Int32)">
            <summary>
            The function add a numbering range to a PDF Document.
            </summary>
            <param name="startPageIndex"> (Zero based) </param>
            <param name="startPageNumber"> </param>
            <returns>A PageNumberingRange</returns>
            <example>
            
            <code>
            PDFDocument doc = new PDFDocument("sample.pdf");
            PageNumberingRange range= doc.AddNumberingRange(0, 1);
            range.NumberingStyle = NumberingStyle.LowerCaseRoman;                   
            ...
            doc.EndDoc();
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFDocument.TiffToPDF(System.String)">
            <summary>
            This function converts a TIFF file to PDF.
            </summary>
            <param name="tiffFile">Converting TIFF file  </param>
            <example>
            This sample shows how to convert a multi page tiff file to pdf.
            <code>
             PDFDocument doc = new PDFDocument("sample.pdf");          
             doc.Pages.Delete(doc.CurrentPage);
             doc.TiffToPDF("c:\\sample.tif");
             doc.Save();
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFDocument.TiffToPDF(System.Drawing.Bitmap)">
            <summary>
            This function converts a TIFF file to PDF.
            </summary>
            <param name="tiffImage">Converting TIFF image  </param>
            <example>
            This sample shows how to convert a multi page tiff file to pdf.
            <code>
             PDFDocument doc = new PDFDocument("sample.pdf");        
             doc.Pages.Delete(doc.CurrentPage);
             doc.TiffToPDF("c:\\sample.tif");
             doc.Save();
            </code>
            </example>
        </member>
        <member name="M:PDFTech.PDFDocument.SetAction_AfterPrint(System.String)">
            <summary>
            An Java Script Action to be performed after print.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.SetAction_AfterSave(System.String)">
            <summary>
            An Java Script Action to be performed after save.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.SetAction_BeforeClose(System.String)">
            <summary>
            An Java Script Action to be performed before close.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.SetAction_BeforePrint(System.String)">
            <summary>
            An Java Script Action to be performed before print.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.SetAction_BeforeSave(System.String)">
            <summary>
            An Java Script Action to be performed before save.
            </summary>
        </member>
        <member name="M:PDFTech.PDFDocument.LoadPdf(System.IO.Stream,System.Int32,System.Int32,System.String)">
            <summary>
            The LoadPDF method imports a PDF stream into the current PDFDocument. 
            </summary>
            <param name="PDFStream">pdf file stream</param>
            <param name="startPage">start page</param>
            <param name="endPage">end page</param>
            <param name="pass">PDF file password. Can be empty string.</param>
        </member>
        <member name="M:PDFTech.PDFDocument.LoadPdf(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            The LoadPDF method imports a PDF into the current PDFDocument. 
            </summary>
            <param name="fileName">PDF file path</param>
            <param name="startPage">start page</param>
            <param name="endPage">end page</param>
            <param name="pass">PDF file password. Can be empty string.</param>
        </member>
        <member name="M:PDFTech.PDFDocument.LoadPdf(System.String,System.String)">
            <summary>
            The LoadPDF method imports a PDF into the current PDFDocument. 
            </summary>
            <param name="fileName">PDF file path</param>        
            <param name="pass">PDF file password. Can be empty string.</param>
        </member>
        <member name="M:PDFTech.PDFDocument.LoadPdf(System.IO.Stream,System.String)">
            <summary>
            The LoadPDF method imports a PDF stream into the current PDFDocument. 
            </summary>
            <param name="fileName">PDF file stream</param>        
            <param name="pass">PDF file password. Can be empty string.</param>
        </member>
        <member name="M:PDFTech.PDFDocument.LoadPDFA(PDFTech.PDFAConverter,System.String)">
            <summary>
             The LoadPDFA method imports a converted PDF/a document into the current PDFDocument. 
            </summary>
            <param name="conv">PDF/A converter class.</param>
            <param name="WorkingPath">>Location of where the temporary files will be created.</param>
            <returns></returns>
        </member>
        <member name="P:PDFTech.PDFDocument.AcroForm">
            <summary>
            Retrieves the form for this document.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.Pages">
            <summary>
            Retrieves the page collection of this document
            </summary>        
        </member>
        <member name="P:PDFTech.PDFDocument.Actions">
            <summary>
            Retrieves the action collection of this document
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.Attachments">
            <summary>
            Retrieves the attachments of this document
            </summary>            
        </member>
        <member name="P:PDFTech.PDFDocument.Schemas">
            <summary>
            Retrieves the document Meta data collection schemas
            </summary>        
            <example>
            The example below demonstrates how the custom document properties are set.
            <code>
            PDFDocument doc = new PDFDocument("sample.pdf");
            PdfMetaDataSchema schema = doc.AddSchema();
            schema.Properties.Add("Customer", "Joe Doe");
            schema.Properties.Add("Company", "Acme Corp.");                
            ...
            doc.Save();
            </code>        
            </example>
            <remarks>
            Meta date schemas are used to attach custom properties to documents. Meta data can be grouped into schemas and more than one schema may be attached to a document.
            </remarks>
        </member>
        <member name="E:PDFTech.PDFDocument.Progress">
            <summary>
            Gets or sets the method to be executed when this event is raised. 
            </summary>
            <remarks>
            This event returns the state of the PDF Document creation process.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFDocument.PageSetupInfo">
            <summary>
            Gets the default page setup for document's pages. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.UnitOfMeasure">
            <summary>
            Sets the UnitOfMeasure for the drawing operations. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.LicenseType">
            <summary>
            Retrieves the license type you own.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.Error">
            <summary>
            Returns possible error messages.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.OpenDocumentAction">
            <summary>
            An action to be performed when the document is opened.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.Outlines">
            <summary>
            Tree of outlines for current PDF document.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.CurrentPage">
            <summary>
            This property determines current active page.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.PageCount">
            <summary>
            Count of created pages in current PDF document.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.Aborted">
            <summary>
            This read-only property is true if the generation of the PDF document was aborted using the Abort method.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.AutoLaunch">
            <summary>
            Determines if Adobe Acrobat should be automatically launched to view a newly-generated file.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.FileName">
            <summary>
            This is the filename of the PDF file which should be created. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.DocumentInfo">
            <summary>
            Information about PDF document.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.AutoCreateURL">
            <summary>
            Gets or sets the URL's automatically created or not.
            </summary>
            <remarks>
            If set to true, text written to a page via PDFPage. TextOut will be parsed and if substrings 'http://','mailto:','ftp://' are located a link will be automatically appended to this URL.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFDocument.PageHeader">
            <summary>
            Return this document's header.
            </summary>
        </member>
        <member name="P:PDFTech.PDFDocument.PageFooter">
            <summary>
            Return this document's footer.
            </summary>
        </member>
        <member name="T:PDFTech.ProgressEventArgs">
            <summary>
            Holds event data for the <see cref="E:PDFTech.PDFDocument.Progress">Progress</see> event. 
            </summary>
        </member>
        <member name="P:PDFTech.ProgressEventArgs.Page">
            <summary>
            Gets the current page index.
            </summary>
        </member>
        <member name="P:PDFTech.ProgressEventArgs.Stage">
            <summary>
            Gets the <see cref="T:PDFTech.ProgressStage">ProgressStage</see>
            </summary>
        </member>
        <member name="P:PDFTech.ProgressEventArgs.PercentDone">
            <summary>
            Gets the percent number.
            </summary>
        </member>
        <member name="T:PDFTech.ProgressStage">
            <summary>
            This enumeration show the progress
            </summary>
        </member>
        <member name="F:PDFTech.ProgressStage.BeforeEndDoc">
            <summary>
            Stage before the creation of the PDF document.
            </summary>
        </member>
        <member name="F:PDFTech.ProgressStage.CreatePage">
            <summary>
            The stage when the page is created.
            </summary>
        </member>
        <member name="F:PDFTech.ProgressStage.Starting">
            <summary>
            The stage where the progress is started
            </summary>
        </member>
        <member name="F:PDFTech.ProgressStage.Running">
            <summary>
            The stage where the progress starts
            </summary>
        </member>
        <member name="F:PDFTech.ProgressStage.Ending">
            <summary>
            The ending stage.
            </summary>
        </member>
        <member name="T:PDFTech.PDFEdit">
            <summary>
            PDFEdit is similar to <see cref="T:System.Windows.Forms.TextBox">TextBox</see> and creates a control which accepts input in a PDF document.
            </summary>
        </member>
        <member name="P:PDFTech.PDFEdit.Text">
            <summary>
            Text displayed in PDFEdit control when file is created.
            </summary>
            <remarks>
            This property specifies the content that is displayed in the text box when the text box does not have the focus.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFEdit.Multiline">
            <summary>
            If property is set to true, the PDFEdit may contain multiple lines of text; if false, the field's text is restricted to a single line.
            </summary>
        </member>
        <member name="P:PDFTech.PDFEdit.IsPassword">
            <summary>
            If set, the field is intended for entering a secure password that should not be echoed visibly to the screen.
            </summary>
            <remarks>Characters typed from the keyboard should instead be echoed in some unreadable form, such as asterisks or bullet characters.</remarks>
        </member>
        <member name="P:PDFTech.PDFEdit.MaxLength">
            <summary>
            The maximum length of the field's text, in characters.
            </summary>
        </member>
        <member name="P:PDFTech.PDFEdit.Justification">
            <summary>
            Justification of input text.
            </summary>
        </member>
        <member name="T:PDFTech.PDFGoToPageAction">
            <summary>
            A GoToPage action changes the view to a specified destination (page, location).
            </summary>
        </member>
        <member name="P:PDFTech.PDFGoToPageAction.Zoom">
            <summary>
            Gets or sets the zoom factor to be used when the page is displayed. 
            </summary>
            <remarks>
             This value is used by the following magnification modes: <see cref="F:PDFTech.MagnificationMode.XYZ">MagnificationMode.XYZ</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFGoToPageAction.MagnificationMode">
            <summary>
            Gets or sets the magnification mode for destination page.
            </summary>
        </member>
        <member name="P:PDFTech.PDFGoToPageAction.PageIndex">
            <summary>
            Index of the page which will be displayed after the action is executed.
            </summary>
        </member>
        <member name="P:PDFTech.PDFGoToPageAction.TopOffset">
            <summary>
            Gets or sets the top coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes: 
            <see cref="F:PDFTech.MagnificationMode.XYZ">MagnificationMode.XYZ</see>, 
             <see cref="F:PDFTech.MagnificationMode.FitH"> MagnificationMode.FitH</see>,
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>,
            <see cref="F:PDFTech.MagnificationMode.FitBH"> MagnificationMode.FitBH</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFGoToPageAction.BottomOffset">
            <summary>
            Gets or sets the bottom coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes: 
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFGoToPageAction.LeftOffset">
            <summary>
            Gets or sets the left coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes:
            <see cref="F:PDFTech.MagnificationMode.XYZ">MagnificationMode.XYZ</see>, 
             <see cref="F:PDFTech.MagnificationMode.FitV"> MagnificationMode.FitV</see>,
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>,
            <see cref="F:PDFTech.MagnificationMode.FitBV"> MagnificationMode.FitBV</see>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFGoToPageAction.RightOffset">
            <summary>
            Gets or sets the right coordinate in the page where the viewer should display the page. 
            </summary>
            <remarks>
            This value is used by the following magnification modes: 
            <see cref="F:PDFTech.MagnificationMode.FitR"> MagnificationMode.FitR</see>
            </remarks>
        </member>
        <member name="T:PDFTech.PDFImportDataAction">
            <summary>
            An import-data action imports Forms Data Format (FDF) data into a documents interactive form from a specified file. 
            </summary>
            <remarks>The structure of an FDF file can be found in the Adobe PDF Reference.</remarks>
        </member>
        <member name="P:PDFTech.PDFImportDataAction.FileName">
            <summary>
            The FDF file from which to import the data.
            </summary>
        </member>
        <member name="T:PDFTech.PDFPage">
            <summary>
            This class consist of information about one page of the PDF document.
            </summary>
        </member>
        <member name="P:PDFTech.PDFPage.ApplyTemplate">
            <summary>
            Gets or sets the template usage. 
            </summary>
            <value>
            If set yo false the template is not used
            </value>
        </member>
        <member name="P:PDFTech.PDFPage.PageTransition">
            <summary>
            Gets the transition for the page.
            </summary>
            <value>
            <see cref="T:PDFTech.PDFTransition">PDFPageTransition</see> is a special effect use when displaying the page.
            </value>
        </member>
        <member name="P:PDFTech.PDFPage.Index">
            <summary>
            Returns Index of this page.
            </summary>        
        </member>
        <member name="P:PDFTech.PDFPage.PageSetupInfo">
            <summary>
            Gets the  page setup for current page. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFPage.Body">
            <summary>
            Gets this page's body element
            </summary>        
        </member>
        <member name="T:PDFTech.PDFJavaScriptAction">
            <summary>
            A JavaScript action causes a script to be compiled and executed by the JavaScript interpreter.
            </summary>
            <remarks>
            Depending on the nature of the script, this can cause various interactive form fields in the document to update their values or change their visual appearance.
            <para>Adobe Technical Note #5186, "Acrobat Forms JavaScript Object Specification" give details on the contents and effects of JavaScript scripts.</para>
            </remarks>
        </member>
        <member name="P:PDFTech.PDFJavaScriptAction.JavaScript">
            <summary>
            A string containing the JavaScript script to be executed.
            </summary>
        </member>
        <member name="T:PDFTech.PDFLaunchAction">
            <summary>
            This type of action allows a user to launch an application or to open a document. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFLaunchAction.File">
            <summary>
            Gets or sets the file to be launched by this action. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFLaunchAction.NewWindow">
            <summary>
            Gets or sets whether the remote document opens in current window or in a new window. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFNamedAction">
            <summary>
            This type of action allows a user to navigate to specific pages in the document or to print the document. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFNamedAction.NamedAction">
            <summary>
            Gets or sets the named action to be executed when this action is executed.
            </summary>
        </member>
        <member name="T:PDFTech.PDFRadioButton">
            <summary>
            PDFRadioButton is similar to <see cref="T:System.Windows.Forms.RadioButton">RadioButton</see> and creates a radiobutton in a PDF document.
            </summary>
            <remarks>
            To create a set of radiobuttons create PDFRadiobuttons with equal names and differences 
            export values.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRadioButton.RG">
            <summary>
            The group that a Radio button is a part of
            </summary>
        </member>
        <member name="P:PDFTech.PDFRadioButton.Value">
            <summary>
            Value which will be sent to a URL when PDF document is submited
            </summary>
            <remarks>
            Must have only alphabet and numeric characters.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRadioButton.Checked">
            <summary>
            Start state of radio button.
            </summary>
        </member>
        <member name="T:PDFTech.PDFResetFormAction">
            <summary>
            A reset-form action resets selected PDF controls to their default values. 
            </summary>
            <remarks>
            Default value is the value of the control at time of PDF document creation
            </remarks>
        </member>
        <member name="P:PDFTech.PDFResetFormAction.ResetFields">
            <summary>
            List of the fields which will be reset after action is executed.
            </summary>
            <remarks>
            If list is empty will reset all controls.
            </remarks>
        </member>
        <member name="T:PDFTech.PDFRubberStampAnnotation">
            <summary>
            A rubber stamp annotation displays text or graphics intended to look as if they were stamped on the page with a rubber stamp.
            </summary>
            <remarks>
            When opened, it displays a pop-up window containing the text of the associated note.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFRubberStampAnnotation.Icon">
            <summary>
            Gets or sets annotation icon
            </summary>        
        </member>
        <member name="T:PDFTech.PDFSubmitFormAction">
            <summary>
            A submit-form action transmits the names and values of selected PDF Controls
            to a specified uniform resource locator (URL), usualy the address of a World Wide Web server that will process them and send back a response.
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.IncludeFields">
            <summary>
            List of the fields which will be submited after the action is executed.
            </summary>
            <remarks>
            If list is empty the function will submit all controls.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.URL">
            <summary>
            Uniform resource locator (URL) of the script at the Web server that will process the submission.
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.SubmitType">
            <summary>
            This property sets the type of submit.
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.EmbedForm">
            <summary>
            Gets or sets a value indicating whether the PDF document is embedded in the submitted FDF file.
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.ExcludeNonUserAnnotations">
            <summary>
            Gets or sets a value indicating whether only the annotations whose author is the current user should be submitted. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.IncludeAnnotations">
            <summary>
            Gets or sets a value indicating whether the markup annotations in the underlying PDF document are included in the submitted FDF file.
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.IncludeAppendSaves">
            <summary>
            Gets or sets a value indicating whether the incremental updates to the underlying PDF document are included in the submitted FDF file. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.IncludeNoValueFields">
            <summary>
            Gets or sets a value indicating whether the fields with no value should be submitted. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.SubmitCoordinates">
            <summary>
            Gets or sets a value indicating whether the coordinates of the mouse click that caused the submit form action are transmitted as part of form data. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.SubmitFields">
            <summary>
            Gets or sets a value indicating whether the fields in Fields collection should be submitted or not. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.UseCanonicalDateTimeFormat">
            <summary>
            Gets or sets a value indicating whether the field values representing dates should be submitted using PDF date/time format. 
            </summary>
        </member>
        <member name="P:PDFTech.PDFSubmitFormAction.UseHttpGet">
            <summary>
            Gets or sets a value indicating whether the field names and values should be submitted using HTTP GET method. 
            </summary>
        </member>
        <member name="T:PDFTech.PDFTextAnnotation">
            <summary>
            A text annotation represents a "sticky note" attached to a point in the PDF document.
            </summary>
            <remarks>
            When closed, the annotation appears as an icon; when open, it displays a pop-up window containing the text of the note, in a font and size chosen by the viewer application.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFTextAnnotation.BorderStyle">
            <summary>
            Gets or sets annotation border style.
            </summary>
        </member>
        <member name="P:PDFTech.PDFTextAnnotation.BorderWidth">
            <summary>
            Gets or set annotation border width
            </summary>
        </member>
        <member name="P:PDFTech.PDFTextAnnotation.textAnnotationIcon">
            <summary>
            Icon used for Annotation
            </summary>
        </member>
        <member name="P:PDFTech.PDFTextAnnotation.Opened">
            <summary>
            A property specifying whether the annotation should initially be displayed open.
            </summary>
        </member>
        <member name="T:PDFTech.PDFURLAction">
            <summary>
            A URL action causes a URL to be resolved.
            </summary>
            <remarks>
            A uniform resource locator (URL) is a string that identifies or (resolves to) a resource on the Internet. Usually a file that is the destination of a hypertext link.
            </remarks>
        </member>
        <member name="P:PDFTech.PDFURLAction.URL">
            <summary>
            Property specifies URL to be resolved after action is executed.
            </summary>
        </member>
        <member name="T:PDFTech.PDFVisibleControlAction">
            <summary>
            A hide action hides or shows one or more PDF controls on the screen by setting or clearing their Hidden flags.
            </summary>
        </member>
        <member name="P:PDFTech.PDFVisibleControlAction.Visible">
            <summary>
            State which Hidden flags are set to.
            </summary>
        </member>
        <member name="P:PDFTech.PDFVisibleControlAction.Controls">
            <summary>
            List of the PDF controls which have their Hidden flags changed.
            </summary>
        </member>
        <member name="T:PDFTech.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:PDFTech.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:PDFTech.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:PDFTech.PDFBrush.GradientMode">
            <summary>
            Gets or sets the gradient mode
            </summary>
        </member>
        <member name="P:PDFTech.PDFBrush.Color">
            <summary>
            Gets or sets the color
            </summary>
        </member>
        <member name="P:PDFTech.PDFBrush.ForeColor">
            <summary>
            Gets or sets the fore color
            </summary>
        </member>
        <member name="P:PDFTech.PDFBrush.HatchStyle">
            <summary>
            Gets or sets the hatch type
            </summary>
        </member>
        <member name="P:PDFTech.PDFBrush.Type">
            <summary>
            Gets or sets the brush type
            </summary>
        </member>
        <member name="M:PDFTech.Shapes.SetTransparency(System.Single)">
            <summary>
            Sets the Canvas transparency value
            </summary>
            <param name="transparency">Values of 0 to 100 can be set </param>
        </member>
        <member name="M:PDFTech.Shapes.DrawCurve(PDFTech.PDFPen,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This procedure adds a Bezier cubic curve segment to the path
            </summary>
            <remarks>
            This procedure adds a Bezier cubic curve segment to the path starting at the current point 
            as (x0, y0), using two points (x1, y1) and (x2, y2) as control points, and terminating at 
            point (x3, y3). The new current point will be (x3, y3).
            </remarks>
            <param name="pen"></param>       
            <param name="X0">current point x value</param>
            <param name="Y0">current point y value</param>
            <param name="X1">First point x location</param>
            <param name="Y1">First point y location</param>
            <param name="X2">Second point x location</param>
            <param name="Y2">Second point y location</param>
            <param name="X3">Thirdth point x location</param>
            <param name="Y3">Thirdth point y location</param>
        </member>
        <member name="M:PDFTech.Shapes.DrawRectangle(PDFTech.PDFBrush,PDFTech.PDFPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function draws a rectangle.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="pen">Pen that determines the color and width of the rectangle. </param>
            <param name="left">left location</param>
            <param name="top">top location</param>
            <param name="width">rectangle width</param>
            <param name="height">rectangle height</param>
        </member>
        <member name="M:PDFTech.Shapes.DrawCircle(PDFTech.PDFBrush,PDFTech.PDFPen,System.Double,System.Double,System.Double)">
            <summary>
            This procedure creates a circular path centered at (x, y) with radius "r" in the counter-clock-wise direction. 
            </summary>
            <remarks>
            If you need a circle drawn in the clock-wise direction, please use Arc(x, y, x+r,y+r, 360.0);         
            </remarks>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="pen">Pen that determines the color and width of the circle. </param>
            <param name="X">Location x</param>
            <param name="Y">Location y</param>
            <param name="R">Radius value</param>
        </member>
        <member name="M:PDFTech.Shapes.DrawEllipse(PDFTech.PDFBrush,PDFTech.PDFPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This procedure draw an ellipse
            </summary>   
            <param name="brush">Brush that determines the characteristics of the fill.</param>
            <param name="pen">Pen that determines the color and width of the ellipse. </param>
            <param name="left">left value</param>
            <param name="top">top value</param>
            <param name="width">Ellipse width</param>
            <param name="height">Ellipse height</param>
        </member>
        <member name="M:PDFTech.Shapes.DrawArc(PDFTech.PDFPen,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Use Arc to create an elliptically curved path. 
            </summary>
            <remarks>
            Use Arc to create an elliptically curved path. The arc traverses the perimeter of an ellipse 
            that is bounded by the points (X1,Y1) and (X2,Y2). The arc is drawn following the perimeter 
            of the ellipse, counterclockwise, from the starting point to the ending point. The starting 
            point is defined by the intersection of the ellipse and a line defined by 
            <list type="bullet">
            <item>The center of the ellipse and (X3,Y3). The ending point is defined by the intersection of the ellipse and a line defined by the center of the ellipse and (X4, Y4).</item>
            <item>BegAngle and EndAngle, specified in degrees.</item>
            </list>
            </remarks>
            <param name="pen">Pen that determines the color and width of the arc. </param>
            <param name="X1">First point x value</param>
            <param name="Y1">First point y value</param>
            <param name="X2">Second point x value</param>
            <param name="Y2">Second point y value</param>
            <param name="BegAngle">Begin angle</param>
            <param name="EndAngle">End angle</param>        
        </member>
        <member name="M:PDFTech.Shapes.DrawArc(PDFTech.PDFPen,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Use Arc to create an elliptically curved path.
            </summary>
            <remarks>
            Use Arc to create an elliptically curved path. The arc traverses the perimeter of an ellipse 
            that is bounded by the points (X1,Y1) and (X2,Y2). The arc is drawn following the perimeter 
            of the ellipse, counterclockwise, from the starting point to the ending point. The starting 
            point is defined by the intersection of the ellipse and a line defined by 
            <list type="bullet">
            <item>The center of the ellipse and (X3,Y3). The ending point is defined by the intersection of the ellipse and a line defined by the center of the ellipse and (X4, Y4).</item>
            <item>BegAngle and EndAngle, specified in degrees.</item>
            </list>
            </remarks>
            <param name="pen">Pen that determines the color and width of the arc. </param>
            <param name="X1">First point x value</param>
            <param name="Y1">First point y value</param>
            <param name="X2">Second point x value</param>
            <param name="Y2">Second point y value</param>
            <param name="X3">Thirdth point x value</param>
            <param name="Y3">Thirdth point y value</param>
            <param name="X4">Fourth point x value</param>
            <param name="Y4">Fourth point y value</param>
            <returns>Function return current point.</returns>
        </member>
        <member name="M:PDFTech.Shapes.DrawRotetedRect(PDFTech.PDFBrush,PDFTech.PDFPen,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            This function draws a rectangle of size (w, h) with one corner at (x,y), with an orientation argument, angle, specified in degrees.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="pen">Pen that determines the color and width of the rectangle. </param>
            <param name="x">Location x value</param>
            <param name="y">Location y value</param>
            <param name="w">Width</param>
            <param name="h">Heigth</param>
            <param name="Angle">Orientation value</param>
        </member>
        <member name="M:PDFTech.Shapes.DrawRoundRect(PDFTech.PDFBrush,PDFTech.PDFPen,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Add a rectangle with rounded corners to path.
            </summary>
            <remarks>
            The rectangle will have edges defined by the points (X1,Y1), (X2,Y1), (X2,Y2), (X1,Y2), 
            but the corners will be shaved to create a rounded appearance. The curve of the rounded 
            corners matches the curvature of an ellipse with width X3 and height Y3
            </remarks>
            <param name="brush">Brush that determines the characteristics of the fill.</param>
            <param name="pen">Pen that determines the color and width of the rectangle.</param>
            <param name="X1">First point x value</param>
            <param name="Y1">First point y value</param>
            <param name="X2">Second point x value</param>
            <param name="Y2">Second point y value</param>
            <param name="X3">Thirdth point x value</param>
            <param name="Y3">Thirdth point y value</param>
        </member>
        <member name="M:PDFTech.Shapes.Scale(System.Double,System.Double)">
            <summary>
            This procedure scales the coordinate system by scaling factors supplied for X and Y 
            dimensions.
            </summary>
            <param name="SX">X scaling factor</param>
            <param name="SY">Y scaling factor</param>
        </member>
        <member name="M:PDFTech.Shapes.Rotate(System.Double)">
            <summary>
            This procedure rotates the coordinate system by the angle given in degrees 
            (positive is clock wise).
            </summary>
            <param name="Angle">Angle value</param>
        </member>
        <member name="M:PDFTech.Shapes.Translate(System.Double,System.Double)">
            <summary>
            This procedure shifts the origin of the coordinate system by the (xt, yt) specified.
            </summary>
            <param name="XT">X shift value</param>
            <param name="YT">Y shift value</param>
        </member>
        <member name="T:PDFTech.Cell">
            <summary>
            Cell represents the smallest part of a table.
            </summary>
        </member>
        <member name="M:PDFTech.Cell.SetAction(PDFTech.PDFAction)">
            <summary>
            The SetAction method sets the PDFAction of this Cell object.
            </summary>
            <param name="act"></param>
        </member>
        <member name="M:PDFTech.Cell.SetValue(System.String)">
            <summary>
            The SetValue method sets the text of this Cell object
            </summary>
            <param name="Text">Text to be written</param>
        </member>
        <member name="M:PDFTech.Cell.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="P:PDFTech.Column.width">
            <summary>
            <value>double value uses unit of measure. Set 0 for autocalculate</value>
            </summary>
        </member>
        <member name="P:PDFTech.Row.height">
            <summary>
            <value>double value uses unit of measure. Set 0 for autocalculate</value>
            </summary>
        </member>
        <member name="P:PDFTech.Row.calculatedHeight">
            <summary>
            <value>returns calculated widths</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderWidth">
            <summary>
            <value>double value uses unit of measure.</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderType">
            <summary>
            <value>border type</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderColor">
            <summary>
            <value>Border Color</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderTopWidth">
            <summary>
            <value>double value uses unit of measure.</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderTopType">
            <summary>
            <value>border type</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderTopColor">
            <summary>
            <value>Border Color</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderBottomWidth">
            <summary>
            <value>double value uses unit of measure.</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderBottomType">
            <summary>
            <value>border type</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderBottomColor">
            <summary>
            <value>Border Color</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderLeftWidth">
            <summary>
            <value>double value uses unit of measure.</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderLeftType">
            <summary>
            <value>border type</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderLeftColor">
            <summary>
            <value>Border Color</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderRightWidth">
            <summary>
            <value>double value uses unit of measure.</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderRightType">
            <summary>
            <value>border type</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.borderRightColor">
            <summary>
            <value>Border Color</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.paddingLeft">
            <summary>
            <value>double value uses unit of measure</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.paddingRight">
            <summary>
            <value>double value uses unit of measure</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.paddingTop">
            <summary>
            <value>double value uses unit of measure</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.paddingBottom">
            <summary>
            <value>double value uses unit of measure</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.fontName">
            <summary>
            <value>The name of the font that will used for text</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.fontSize">
            <summary>
            <value>double value </value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.fontColor">
            <summary>
            <value>font color using for text outputs</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.fontStyle">
            <summary>
            <value>font style using for text outputs flags [enum]</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.backgroundColor">
            <summary>
            <value>background color of the applied area</value>
            </summary>
        </member>
        <member name="P:PDFTech.Style.textAlign">
            <summary>
            <value>Horizontally text alignment (enum)</value> 
            </summary>
        </member>
        <member name="P:PDFTech.Style.verticalAlign">
            <summary>
            <value>Vertical alignment of the content (enum)</value>
            </summary>
        </member>
        <member name="T:PDFTech.Table">
            <summary>
            Specifies that the contained content is organized into a table with rows and columns.
            </summary>
        </member>
        <member name="M:PDFTech.Table.cell(System.Int32,System.Int32)">
            <summary>
            Gets the cell
            </summary>
            <param name="rowNbr">Row index (zero based)</param>
            <param name="columnIndex">Column index (zero based) </param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.Table.row(System.Int32)">
            <summary>
            Get the row
            </summary>
            <param name="rowIndex">Row index (zero based)</param>
            <returns></returns>
        </member>
        <member name="M:PDFTech.Table.column(System.Int32)">
            <summary>
            Get the column
            </summary>
            <param name="columnIndex">Column index (zero based)</param>
            <returns></returns>
        </member>
        <member name="F:PDFTech.Table.pvtStyle">
            <summary>
            Gets general column style of the table.
            </summary>
        </member>
        <member name="F:PDFTech.Table.TotalRowHeight">
            <summary>
            <value>double value uses unit of measure</value>
            </summary>
        </member>
        <member name="M:PDFTech.Table.addRow">
            <summary>
            Adds a new row to an Table object. 
            </summary>
        </member>
        <member name="M:PDFTech.Table.addRow(System.Int32)">
            <summary>
            Adds rows to an Table object. 
            </summary>
            <param name="rowCount">Row count.</param>
        </member>
        <member name="M:PDFTech.Table.#ctor(System.Int32)">
            <summary>
            Initializes a new Table object 
            </summary>
            <param name="columnCount">Column count</param>
        </member>
        <member name="M:PDFTech.Table.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new Table object
            </summary>
            <param name="rowCount"> Row count</param>
            <param name="columnCount">Column count</param>
        </member>
        <member name="M:PDFTech.Table.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="P:PDFTech.Table.rowCount">
            <summary>
            Returns the number of row count;
            </summary>
        </member>
        <member name="P:PDFTech.Table.columnCount">
            <summary>
            Returns the number of column count.
            </summary>
        </member>
        <member name="P:PDFTech.Table.style">
            <summary>
            Gets style of the table
            </summary>
        </member>
        <member name="P:PDFTech.Table.DisplayHeader">
            <summary>
            Gets or sets Header is on or off.
            </summary>
        </member>
        <member name="P:PDFTech.Table.headerHeight">
            <summary>
            Gets or sets header height.
            </summary>
        </member>
        <member name="P:PDFTech.Table.headerStyle">
            <summary>
            Gets general header style of the table.
            </summary>
        </member>
        <member name="P:PDFTech.Table.left">
            <summary>
            double value uses unit of measure.
            </summary>
        </member>
        <member name="P:PDFTech.Table.top">
            <summary>
            double value uses unit of measure
            </summary>
        </member>
        <member name="P:PDFTech.Table.width">
            <summary>
            double value uses unit of measure.
            </summary>
        </member>
        <member name="P:PDFTech.Table.rowHeight">
            <summary>
            double value uses unit of measure
            </summary>
        </member>
    </members>
</doc>
